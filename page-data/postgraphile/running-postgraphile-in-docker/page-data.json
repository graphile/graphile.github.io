{"componentChunkName":"component---src-templates-page-js","path":"/postgraphile/running-postgraphile-in-docker/","result":{"data":{"remark":{"html":"<p>The following guide describes how to run a network of Docker containers on a\nlocal machine, including one container for a PostgreSQL database and one\ncontainer for PostGraphile. A the end of this guide, you will have a GraphQL API\nexposing data from a PostgreSQL database, both running locally on your machine\nin separate Docker containers. It has been developed and tested on:</p>\n<ul>\n<li>Linux</li>\n<li>Windows Pro</li>\n<li>Windows Home</li>\n</ul>\n<h3 id=\"requirements\"><a href=\"#requirements\" aria-label=\"requirements permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Requirements</h3>\n<p>This requires to have Docker and Docker Compose installed on your workstation.\nIf you are new to Docker and need to install it, you can refer to their\n<a href=\"https://docs.docker.com/\">official documentation</a> or follow the steps below.</p>\n<ul>\n<li><a href=\"#install-docker-and-docker-compose-on-linux\">Install Docker and Docker Compose on Linux</a></li>\n<li><a href=\"#install-docker-on-windows-pro\">Install Docker on Windows Pro</a></li>\n<li><a href=\"#install-docker-on-windows-home\">Install Docker on Windows Home</a></li>\n</ul>\n<blockquote>\n<p>Note: If you use Docker Desktop for Windows, it comes automatically with\nDocker Compose.</p>\n</blockquote>\n<h4 id=\"install-docker-and-docker-compose-on-linux\"><a href=\"#install-docker-and-docker-compose-on-linux\" aria-label=\"install docker and docker compose on linux permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install Docker and Docker Compose on Linux</h4>\n<h5 id=\"docker\"><a href=\"#docker\" aria-label=\"docker permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker</h5>\n<p>Add the Docker repository to your Linux repository. Execute the following\ncommands in a terminal window.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> apt-transport-https ca-certificates <span class=\"token function\">curl</span> software-properties-common\n$ <span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> apt-key <span class=\"token function\">add</span> -\n$ <span class=\"token function\">sudo</span> add-apt-repository <span class=\"token string\">\"deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class=\"token variable\"><span class=\"token variable\">$(</span>lsb_release <span class=\"token parameter variable\">-cs</span><span class=\"token variable\">)</span></span> stable\"</span></code></pre></div>\n<p>Install Docker Community Edition.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellsession\"><pre class=\"language-shellsession\"><code class=\"language-shellsession\"><span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> docker-ce</span></span></code></pre></div>\n<p>Add your user to the docker group to setup its permissions. <strong>Make sure to\nrestart your machine after executing this command.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-G</span> <span class=\"token function\">docker</span> <span class=\"token operator\">&lt;</span>username<span class=\"token operator\">></span></code></pre></div>\n<p>Test your Docker installation. Executing the following command will\nautomatically download the <code class=\"language-text\">hello-world</code> Docker image if it does not exist and\nrun it.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">docker</span> run hello-world</code></pre></div>\n<p>Remove the <code class=\"language-text\">hello-world</code> image once you're done.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">docker</span> image <span class=\"token function\">ls</span>\n$ <span class=\"token function\">docker</span> rmi <span class=\"token parameter variable\">-f</span> hello-world</code></pre></div>\n<h5 id=\"docker-compose\"><a href=\"#docker-compose\" aria-label=\"docker compose permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker Compose</h5>\n<p>Docker Compose helps you to run a network of several containers at once thanks\nto configuration files instead of providing all arguments in the command line\ninterface. It makes it easier to manage your containers as command lines can\nbecome very long and unreadable due to the high number of arguments. Execute the\nfollowing command in a terminal window.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">docker-compose</span></code></pre></div>\n<h4 id=\"install-docker-on-windows-pro\"><a href=\"#install-docker-on-windows-pro\" aria-label=\"install docker on windows pro permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install Docker on Windows Pro</h4>\n<h5 id=\"docker-desktop-for-windows\"><a href=\"#docker-desktop-for-windows\" aria-label=\"docker desktop for windows permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker Desktop for Windows</h5>\n<p>Install Docker Community Edition for Windows from the following the URL:\n<a href=\"https://hub.docker.com/editions/community/docker-ce-desktop-windows\">Docker Desktop for Windows</a>.\nJust follow the default installation settings. It comes automatically with\nDocker Compose.</p>\n<h4 id=\"install-docker-on-windows-home\"><a href=\"#install-docker-on-windows-home\" aria-label=\"install docker on windows home permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install Docker on Windows Home</h4>\n<h5 id=\"docker-toolbox-for-windows\"><a href=\"#docker-toolbox-for-windows\" aria-label=\"docker toolbox for windows permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker Toolbox for Windows</h5>\n<p>Install Docker Toolbox for Windows from the following the URL:\n<a href=\"https://docs.docker.com/toolbox/overview\">Docker Toolbox for Windows</a>. Just\nfollow the default installation settings. It comes automatically with Docker\nCompose.</p>\n<h3 id=\"create-postgresql-container\"><a href=\"#create-postgresql-container\" aria-label=\"create postgresql container permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create PostgreSQL Container</h3>\n<h4 id=\"setup-environment-variables\"><a href=\"#setup-environment-variables\" aria-label=\"setup environment variables permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setup Environment Variables</h4>\n<p>Create a new file <code class=\"language-text\">.env</code> at the root of the repository with the content below.\nThis file will be used by Docker to load configuration parameters into\nenvironment variables. In particular:</p>\n<ul>\n<li><code class=\"language-text\">POSTGRES_DB</code>: name of the database to be created in the PostgreSQL container.</li>\n<li><code class=\"language-text\">POSTGRES_USER</code>: default admin user created upon database initialization.</li>\n<li><code class=\"language-text\">POSTGRES_PASSWORD</code>: password of the default admin user.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># DB\n# Parameters used by db container\nPOSTGRES_DB=forum_example\nPOSTGRES_USER=postgres\nPOSTGRES_PASSWORD=change_me</code></pre></div>\n<blockquote>\n<p>Note: a better way to manager the database password would be to use\n<a href=\"https://docs.docker.com/engine/reference/commandline/secret/\">Docker Secrets</a>.</p>\n</blockquote>\n<h4 id=\"create-database-initialization-files\"><a href=\"#create-database-initialization-files\" aria-label=\"create database initialization files permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create Database Initialization Files</h4>\n<p>Create a new folder <code class=\"language-text\">db</code> at the root of the repository. It will be used to store\nthe files necessary to create the PostgreSQL container. In the <code class=\"language-text\">db</code> folder,\ncreate a new subfolder <code class=\"language-text\">init</code> which will contain the SQL files used to\ninitialize the PostgreSQL database. Files located in the <code class=\"language-text\">init</code> folder will be\nexecuted in sequence order when PostgreSQL initialize the database.</p>\n<p>In this guide we will use a simple forum example. The database will contain two\ntables: <code class=\"language-text\">user</code> and <code class=\"language-text\">post</code>. There is a relationship between <code class=\"language-text\">user</code> and <code class=\"language-text\">post</code> as\none user can have one or several posts. It is a \"one-to-many\" relationship (one\nparent, many children). The <code class=\"language-text\">author_id</code> column in the <code class=\"language-text\">post</code> will be used as a\nforeign key of the <code class=\"language-text\">user</code> table.</p>\n<p>Create a first file <code class=\"language-text\">00-database.sql</code> containing the database schema definition\nas below.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">\\<span class=\"token keyword\">connect</span> forum_example<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*Create user table in public schema*/</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">user</span> <span class=\"token punctuation\">(</span>\n    id <span class=\"token keyword\">SERIAL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n    username <span class=\"token keyword\">TEXT</span><span class=\"token punctuation\">,</span>\n    created_date <span class=\"token keyword\">TIMESTAMP</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">COMMENT</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">user</span> <span class=\"token operator\">IS</span>\n<span class=\"token string\">'Forum users.'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*Create post table in public schema*/</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span>post <span class=\"token punctuation\">(</span>\n    id <span class=\"token keyword\">SERIAL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n    title <span class=\"token keyword\">TEXT</span><span class=\"token punctuation\">,</span>\n    body <span class=\"token keyword\">TEXT</span><span class=\"token punctuation\">,</span>\n    created_date <span class=\"token keyword\">TIMESTAMP</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span><span class=\"token punctuation\">,</span>\n    author_id <span class=\"token keyword\">INTEGER</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">REFERENCES</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">user</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">COMMENT</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span>post <span class=\"token operator\">IS</span>\n<span class=\"token string\">'Forum posts written by a user.'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>For the sake of the example, we will also create a second file <code class=\"language-text\">01-data.sql</code> to\npopulate the database with some dummy data.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">\\<span class=\"token keyword\">connect</span> forum_example<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*Create some dummy users*/</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">user</span> <span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'Benjie'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'Singingwolfboy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'Lexius'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*Create some dummy posts*/</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span>post <span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">,</span> author_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'First post example'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lorem ipsum dolor sit amet'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'Second post example'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Consectetur adipiscing elit'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'Third post example'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Aenean blandit felis sodales'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"create-postgresql-dockerfile\"><a href=\"#create-postgresql-dockerfile\" aria-label=\"create postgresql dockerfile permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create PostgreSQL Dockerfile</h4>\n<p>The Dockerfile is used by Docker as a blueprint to build Docker images. Docker\ncontainers are later on created based on these Docker images. More information\nis available on the official\n<a href=\"https://hub.docker.com/_/postgres\">Postgres Docker Images</a> but the standard\nDockerfile for PostgreSQL is extremely simple. In the folder <code class=\"language-text\">db</code> (not in the\nfolder <code class=\"language-text\">init</code>), create a new file named <code class=\"language-text\">Dockerfile</code> with the following content.</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> postgres:11.0-alpine</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> ./init/ /docker-entrypoint-initdb.d/</span></code></pre></div>\n<p>The first line <code class=\"language-text\">FROM postgres:alpine</code> indicates to build the Docker image based\non the official PostgreSQL Docker image running in an Alpine Linux container.\nThe second line <code class=\"language-text\">COPY ./init/ /docker-entrypoint-initdb.d/</code> will copy the\ndatabase initialization files (SQL) into the folder <code class=\"language-text\">docker-entrypoint-initdb.d</code>\nlocated in the Docker container. This folder is read by PostgreSQL upon database\ninitialization and all its content is executed.</p>\n<h4 id=\"create-docker-compose-file\"><a href=\"#create-docker-compose-file\" aria-label=\"create docker compose file permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create Docker Compose File</h4>\n<p>Docker command lines can be verbose with a lot of parameters so we will use\nDocker Compose to orchestrate the execution of our containers. Create a new file\n<code class=\"language-text\">docker-compose.yml</code> at the root of the repository with the following content.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.3\"</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> forum<span class=\"token punctuation\">-</span>example<span class=\"token punctuation\">-</span>db\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> forum<span class=\"token punctuation\">-</span>example<span class=\"token punctuation\">-</span>db\n    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">context</span><span class=\"token punctuation\">:</span> ./db\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> db<span class=\"token punctuation\">:</span>/var/lib/postgresql/data\n    <span class=\"token key atrule\">env_file</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./.env\n    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> network\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 5432<span class=\"token punctuation\">:</span><span class=\"token number\">5432</span>\n\n<span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">network</span><span class=\"token punctuation\">:</span>\n\n<span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n  db<span class=\"token punctuation\">:</span></code></pre></div>\n<h5 id=\"parameters-description\"><a href=\"#parameters-description\" aria-label=\"parameters description permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parameters description</h5>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>db</strong></td>\n<td>Names of the services run by Docker Compose.</td>\n</tr>\n<tr>\n<td><strong>container_name</strong></td>\n<td>Guess what? It's the container name!</td>\n</tr>\n<tr>\n<td><strong>image</strong></td>\n<td>Name of the image to use to run the container.</td>\n</tr>\n<tr>\n<td><strong>build</strong></td>\n<td>When a build context is provided, Docker Compose will build a custom image using the Dockerfile located in the context folder.</td>\n</tr>\n<tr>\n<td><strong>context</strong></td>\n<td>Indicates the folder where to find the Dockerfile to build the image.</td>\n</tr>\n<tr>\n<td><strong>volumes</strong></td>\n<td>Mapping between the Docker volume and the PostgreSQL folder in your container, in format <code class=\"language-text\">docker_volume:container_folder</code>. All the files generated in the <code class=\"language-text\">container_folder</code> will be copied in the <code class=\"language-text\">docker_volume</code> so that you can preserve and retrieve your data when stopping/restarting the container. The Docker volume is automatically created when running the db container for the first time.</td>\n</tr>\n<tr>\n<td><strong>env_file</strong></td>\n<td>Path to the configuration file containing environment variables for the container. See <strong>Setup Environment Variables</strong> above.</td>\n</tr>\n<tr>\n<td><strong>networks</strong></td>\n<td>Networks are used to group and connect containers as part of a same network.</td>\n</tr>\n<tr>\n<td><strong>ports</strong></td>\n<td>Port, mapping between the port of your host machine and the port of your container, in format <code class=\"language-text\">host_port:container_port</code></td>\n</tr>\n<tr>\n<td><strong>command</strong></td>\n<td>Command to be executed after the container starts. Each argument must be provided in a separate list item.</td>\n</tr>\n</tbody>\n</table>\n<p>At this stage, the repository should look like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/\n├─ db/\n|  ├─ init/\n|  |  ├─ 00-database.sql\n|  |  └─ 01-data.sql\n|  └─ Dockerfile\n├─ .env\n└─ docker-compose.yml</code></pre></div>\n<h3 id=\"create-postgraphile-container\"><a href=\"#create-postgraphile-container\" aria-label=\"create postgraphile container permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create PostGraphile Container</h3>\n<h4 id=\"update-environment-variables\"><a href=\"#update-environment-variables\" aria-label=\"update environment variables permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Update Environment Variables</h4>\n<p>Update the file <code class=\"language-text\">.env</code> to add the <code class=\"language-text\">DATABASE_URL</code> which will be used by\nPostGraphile to connect to the PostgreSQL database.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[...]\n# GRAPHQL\n# Parameters used by graphql container\nDATABASE_URL=postgres://postgres:change_me@db:5432/forum_example</code></pre></div>\n<blockquote>\n<p>Note: The <code class=\"language-text\">DATABASE_URL</code> follows the syntax\n<code class=\"language-text\">postgres://&lt;user>:&lt;password>@db:5432/&lt;db_name></code>.</p>\n</blockquote>\n<h4 id=\"create-postgraphile-dockerfile\"><a href=\"#create-postgraphile-dockerfile\" aria-label=\"create postgraphile dockerfile permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create PostGraphile Dockerfile</h4>\n<p>Create a new folder <code class=\"language-text\">graphql</code> at the root of the repository. It will be used to\nstore the files necessary to create the PostGraphile container. Create a new\nfile <code class=\"language-text\">Dockerfile</code> in the <code class=\"language-text\">graphql</code> folder with the following content. You will\nnotice we include the excellent plugin Connection Filter.</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> node:alpine</span>\n<span class=\"token instruction\"><span class=\"token keyword\">LABEL</span> description=<span class=\"token string\">\"Instant high-performance GraphQL API for your PostgreSQL database https://github.com/graphile/postgraphile\"</span></span>\n\n<span class=\"token comment\"># Install PostGraphile and PostGraphile connection filter plugin</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> npm install -g postgraphile</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> npm install -g postgraphile-plugin-connection-filter</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">EXPOSE</span> 5000</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ENTRYPOINT</span> [<span class=\"token string\">\"postgraphile\"</span>, <span class=\"token string\">\"-n\"</span>, <span class=\"token string\">\"0.0.0.0\"</span>]</span></code></pre></div>\n<h4 id=\"update-docker-compose-file\"><a href=\"#update-docker-compose-file\" aria-label=\"update docker compose file permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Update Docker Compose File</h4>\n<p>Update the file <code class=\"language-text\">docker-compose.yml</code> under the <code class=\"language-text\">services</code> section to include the\nGraphQL service.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.3\"</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">...</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token key atrule\">graphql</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> forum<span class=\"token punctuation\">-</span>example<span class=\"token punctuation\">-</span>graphql\n        <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> forum<span class=\"token punctuation\">-</span>example<span class=\"token punctuation\">-</span>graphql\n        <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">context</span><span class=\"token punctuation\">:</span> ./graphql\n        <span class=\"token key atrule\">env_file</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> ./.env\n        <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> db\n        <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> network\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> 5433<span class=\"token punctuation\">:</span><span class=\"token number\">5433</span>\n        <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"--connection\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"${DATABASE_URL}\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--port\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"5433\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--schema\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"public\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--append-plugins\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"postgraphile-plugin-connection-filter\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">...</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>At this stage, the repository should look like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/\n├─ db/\n|  ├─ init/\n|  |  ├─ 00-database.sql\n|  |  └─ 01-data.sql\n|  └─ Dockerfile\n├─ graphql/\n|  └─ Dockerfile\n├─ .env\n└─ docker-compose.yml</code></pre></div>\n<h3 id=\"build-images-and-run-containers\"><a href=\"#build-images-and-run-containers\" aria-label=\"build images and run containers permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Build Images And Run Containers</h3>\n<h4 id=\"build-images\"><a href=\"#build-images\" aria-label=\"build images permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Build Images</h4>\n<p>You can build the Docker images by executing the following command from the root\nof the repository.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Build images for all services in docker-compose.yml\n$ docker-compose build\n\n# You can also build images one by one\n# For instance you can build the database image like this\n$ docker-compose build db\n\n# And build the graphql image like this\n$ docker-compose build graphql</code></pre></div>\n<h4 id=\"run-containers\"><a href=\"#run-containers\" aria-label=\"run containers permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Run Containers</h4>\n<p>You can run the Docker containers by executing the following command from the\nroot of the repository.</p>\n<blockquote>\n<p>Note: when running the database container for the first time, Docker will\nautomatically create a Docker Volume to persist the data from the database.\nThe Docker Volume is automatically named as <code class=\"language-text\">&lt;your_repository_name>_db</code>.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Run containers for all services in docker-compose.yml\n$ docker-compose up\n\n# Run containers as daemon (in background)\n$ docker-compose up -d\n\n# Run only the database container as daemon\n$ docker-compose up -d db\n\n# Run only the GraphQL container as daemon\n$ docker-compose up -d graphql</code></pre></div>\n<p>Each container can be accessed at the following addresses.</p>\n<table>\n<thead>\n<tr>\n<th>Container</th>\n<th>Docker on Linux / Windows Pro</th>\n<th>Docker on Windows Home</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GraphQL API Documentation</td>\n<td><code class=\"language-text\">http://localhost:5433/graphiql</code></td>\n<td><code class=\"language-text\">http://your_docker_machine_ip:5433/graphiql</code></td>\n</tr>\n<tr>\n<td>GraphQL API</td>\n<td><code class=\"language-text\">http://localhost:5433/graphql</code></td>\n<td><code class=\"language-text\">http://your_docker_machine_ip:5433/graphql</code></td>\n</tr>\n<tr>\n<td>PostgreSQL Database</td>\n<td>host: <code class=\"language-text\">localhost</code>, port: <code class=\"language-text\">5432</code></td>\n<td>host: <code class=\"language-text\">your_docker_machine_ip</code>, port: <code class=\"language-text\">5432</code></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>Note: if you run Docker Toolbox on Windows Home, you can get your Docker\nmachine IP address with the command <code class=\"language-text\">$ docker-machine ip default</code>.</p>\n</blockquote>\n<h4 id=\"re-initialize-the-database\"><a href=\"#re-initialize-the-database\" aria-label=\"re initialize the database permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Re-initialize The Database</h4>\n<p>In case you do changes to the database schema by modifying the files in\n<code class=\"language-text\">/db/init</code>, you will need to re-initialize the database to see these changes.\nThis means you need to delete the Docker Volume, the database Docker Image and\nrebuild it.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Stop running containers</span>\n$ <span class=\"token function\">docker-compose</span> down\n\n<span class=\"token comment\"># List Docker volumes</span>\n$ <span class=\"token function\">docker</span> volume <span class=\"token function\">ls</span>\n\n<span class=\"token comment\"># Delete volume</span>\n$ <span class=\"token function\">docker</span> volume <span class=\"token function\">rm</span> <span class=\"token operator\">&lt;</span>your_repository_name<span class=\"token operator\">></span>_db\n\n<span class=\"token comment\"># Delete database image to force rebuild</span>\n$ <span class=\"token function\">docker</span> rmi db\n\n<span class=\"token comment\"># Run containers (will automatically rebuild the image)</span>\n$ <span class=\"token function\">docker-compose</span> up</code></pre></div>\n<h3 id=\"add-custom-plugin\"><a href=\"#add-custom-plugin\" aria-label=\"add custom plugin permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add Custom Plugin</h3>\n<h4 id=\"makewrapresolversplugin\"><a href=\"#makewrapresolversplugin\" aria-label=\"makewrapresolversplugin permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>makeWrapResolversPlugin</h4>\n<p>This section is optional but describes how to wrap a resolver generated by\nPostGraphile in order to customize it. In the folder <code class=\"language-text\">graphql</code>, create a new\nsubfolder named <code class=\"language-text\">custom-plugin</code>. In this folder create a new file <code class=\"language-text\">package.json</code>\nwith the following content (you can update it to your convenience).</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"custom-plugin\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Custom plugin example for PostGraphile.\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Alexis ROLLAND\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Apache-2.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"graphile-utils\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.5.6\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"postgraphile\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.5.5\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the same folder <code class=\"language-text\">custom-plugin</code>, create a new file <code class=\"language-text\">index.js</code> with the\nfollowing content.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> makeWrapResolversPlugin <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"graphile-utils\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create custom wrapper for resolver createUser</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createUserResolverWrapper</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> resolveInfo</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// You can do something before the resolver executes</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Let resolver execute against database</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// You can do something after the resolver executes</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello again!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Register custom resolvers</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">makeWrapResolversPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">Mutation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">createUser</span><span class=\"token operator\">:</span> <span class=\"token function\">createUserResolverWrapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In the <code class=\"language-text\">graphql</code> folder, update the <code class=\"language-text\">Dockerfile</code> so that it looks like the one\nbelow.</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> node:alpine</span>\n<span class=\"token instruction\"><span class=\"token keyword\">LABEL</span> description=<span class=\"token string\">\"Instant high-performance GraphQL API for your PostgreSQL database https://github.com/graphile/postgraphile\"</span></span>\n\n<span class=\"token comment\"># Install PostGraphile and PostGraphile connection filter plugin</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> npm install -g postgraphile</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> npm install -g postgraphile-plugin-connection-filter</span>\n\n<span class=\"token comment\"># Install custom plugin</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> ./custom-plugin /tmp/custom-plugin</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> cd /tmp/custom-plugin &amp;&amp; npm pack</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> npm install -g /tmp/custom-plugin/custom-plugin-0.0.1.tgz</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> rm -rf /tmp/custom-plugin</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">EXPOSE</span> 5000</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ENTRYPOINT</span> [<span class=\"token string\">\"postgraphile\"</span>, <span class=\"token string\">\"-n\"</span>, <span class=\"token string\">\"0.0.0.0\"</span>]</span></code></pre></div>\n<p>In the file <code class=\"language-text\">docker-compose.yml</code>, add the custom plugin in the <code class=\"language-text\">graphql</code> service\n<code class=\"language-text\">command</code> parameter.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.3\"</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">[</span><span class=\"token punctuation\">...</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token key atrule\">graphql</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">[</span><span class=\"token punctuation\">...</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"--connection\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"${DATABASE_URL}\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"--port\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"5433\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"--schema\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"public\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"--append-plugins\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"postgraphile-plugin-connection-filter,custom-plugin\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">...</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>At this stage, the repository should look like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/\n├─ db/\n|  ├─ init/\n|  |  ├─ 00-database.sql\n|  |  └─ 01-data.sql\n|  └─ Dockerfile\n├─ graphql/\n|  ├─ custom-plugin/\n|  |  ├─ index.js\n|  |  └─ package.json\n|  └─ Dockerfile\n├─ .env\n└─ docker-compose.yml</code></pre></div>\n<p>Finally rebuild and rerun the GraphQL container.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Shut down containers</span>\n$ <span class=\"token function\">docker-compose</span> down\n\n<span class=\"token comment\"># Rebuild the GraphQL container</span>\n$ <span class=\"token function\">docker-compose</span> build graphql\n\n<span class=\"token comment\"># Rerun containers</span>\n$ <span class=\"token function\">docker-compose</span> up</code></pre></div>\n<p>If you execute a <code class=\"language-text\">createUser</code> mutation like in the example provided below, you\nwill notice the log messages from the custom plugin printing in your terminal.</p>\n<h3 id=\"queries-and-mutations-examples\"><a href=\"#queries-and-mutations-examples\" aria-label=\"queries and mutations examples permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Queries And Mutations Examples</h3>\n<h4 id=\"queries\"><a href=\"#queries\" aria-label=\"queries permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Queries</h4>\n<p>Example of query to get all posts and their author.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">query {\n  allPosts {\n    nodes {\n      id\n      title\n      body\n      userByAuthorId {\n        username\n      }\n    }\n  }\n}</code></pre></div>\n<h4 id=\"mutations\"><a href=\"#mutations\" aria-label=\"mutations permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mutations</h4>\n<p>Example of mutation to create a new user.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mutation {\n  createUser(input: {user: {username: \"Bob\"}}) {\n    user {\n      id\n      username\n      createdDate\n    }\n  }\n}</code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/postgraphile/running-postgraphile-in-docker/#requirements\">Requirements</a></p>\n<ul>\n<li>\n<p><a href=\"/postgraphile/running-postgraphile-in-docker/#install-docker-and-docker-compose-on-linux\">Install Docker and Docker Compose on Linux</a></p>\n<ul>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#docker\">Docker</a></li>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#docker-compose\">Docker Compose</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/postgraphile/running-postgraphile-in-docker/#install-docker-on-windows-pro\">Install Docker on Windows Pro</a></p>\n<ul>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#docker-desktop-for-windows\">Docker Desktop for Windows</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/postgraphile/running-postgraphile-in-docker/#install-docker-on-windows-home\">Install Docker on Windows Home</a></p>\n<ul>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#docker-toolbox-for-windows\">Docker Toolbox for Windows</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/postgraphile/running-postgraphile-in-docker/#create-postgresql-container\">Create PostgreSQL Container</a></p>\n<ul>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#setup-environment-variables\">Setup Environment Variables</a></li>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#create-database-initialization-files\">Create Database Initialization Files</a></li>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#create-postgresql-dockerfile\">Create PostgreSQL Dockerfile</a></li>\n<li>\n<p><a href=\"/postgraphile/running-postgraphile-in-docker/#create-docker-compose-file\">Create Docker Compose File</a></p>\n<ul>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#parameters-description\">Parameters description</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/postgraphile/running-postgraphile-in-docker/#create-postgraphile-container\">Create PostGraphile Container</a></p>\n<ul>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#update-environment-variables\">Update Environment Variables</a></li>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#create-postgraphile-dockerfile\">Create PostGraphile Dockerfile</a></li>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#update-docker-compose-file\">Update Docker Compose File</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/postgraphile/running-postgraphile-in-docker/#build-images-and-run-containers\">Build Images And Run Containers</a></p>\n<ul>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#build-images\">Build Images</a></li>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#run-containers\">Run Containers</a></li>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#re-initialize-the-database\">Re-initialize The Database</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/postgraphile/running-postgraphile-in-docker/#add-custom-plugin\">Add Custom Plugin</a></p>\n<ul>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#makewrapresolversplugin\">makeWrapResolversPlugin</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/postgraphile/running-postgraphile-in-docker/#queries-and-mutations-examples\">Queries And Mutations Examples</a></p>\n<ul>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#queries\">Queries</a></li>\n<li><a href=\"/postgraphile/running-postgraphile-in-docker/#mutations\">Mutations</a></li>\n</ul>\n</li>\n</ul>","timeToRead":12,"frontmatter":{"path":"/postgraphile/running-postgraphile-in-docker/","title":"Running PostGraphile in Docker","fullTitle":null,"showExamples":null,"noToc":null}},"nav":{"edges":[{"node":{"id":"5ae9b01a-9c87-58f1-8dcb-7da4e1a638e2","name":"news","sections":[{"id":"main","title":"Releases"},{"id":"about","title":"About Graphile"},{"id":"misc","title":"Talks, Events & Podcasts"}],"pages":[{"to":"/news/20250324-major-grafast-beta/","title":"Major Grafast release: beta.21","sectionId":"main","subpages":null},{"to":"/news/20230803-postgraphile-v5-beta/","title":"PostGraphile V5 public beta!","sectionId":"main","subpages":null},{"to":"/news/20230622-intro-to-postgraphile-v5/","title":"Intro to PostGraphile V5","sectionId":"misc","subpages":null},{"to":"/news/20221208-graphql-galaxy/","title":"Step Aside Resolvers!","sectionId":"misc","subpages":null},{"to":"/news/20221020-development-support/","title":"Development Support Now Available","sectionId":"about","subpages":null},{"to":"/news/20221011-worker-014/","title":"Graphile Worker 0.14 - Batch Jobs","sectionId":"main","subpages":null},{"to":"/news/20220714-graphql-radio/","title":"GraphQL Radio Appearance","sectionId":"misc","subpages":null},{"to":"/news/20220704-github-readme/","title":"Jem's Discussion Panel at GitHub ReadME","sectionId":"about","subpages":null},{"to":"/news/20220607-schema-metadata/","title":"Schema Metadata: A Growing Need","sectionId":"misc","subpages":null},{"to":"/news/20220607-spec-news/","title":"Spec News Pod Launch","sectionId":"misc","subpages":null},{"to":"/news/20220415-graphql-over-sse/","title":"GraphQL over SSE","sectionId":"main","subpages":null},{"to":"/news/20211207-graphql-galaxy/","title":"Working Group Discussion Panel","sectionId":"misc","subpages":null},{"to":"/news/20211109-graphql-summit/","title":"What's Next for the GraphQL Spec in 2022?","sectionId":"misc","subpages":null},{"to":"/news/20210527-postgraphile-412/","title":"PostGraphile 4.12 - Awesome Aggregates","sectionId":"main","subpages":null},{"to":"/news/20210129-postgraphile-411/","title":"PostGraphile 4.11 - Wonderful Websockets","sectionId":"main","subpages":null},{"to":"/news/20210120-worker-09/","title":"Graphile Worker 0.9","sectionId":"main","subpages":null},{"to":"/news/20201208-github-sponsors/","title":"GitHub Sponsors Now Available to Organizations","sectionId":"about","subpages":null},{"to":"/news/20201127-postgraphile-410/","title":"PostGraphile 4.10 - Framework Friends","sectionId":"main","subpages":null},{"to":"/news/20200922-github-readme/","title":"Benjie's Story at GitHub ReadME","sectionId":"about","subpages":null},{"to":"/news/20201127-migrate-1/","title":"Graphile Migrate Reaches 1.0 Milestone","sectionId":"main","subpages":null},{"to":"/news/20200805-postgraphile-48/","title":"PostGraphile 4.8 - Excellent Enums","sectionId":"main","subpages":null},{"to":"/news/20200721-rita/","title":"pgRITA - A Tool for Postgres","sectionId":"main","subpages":null},{"to":"/news/20200427-starter-30/","title":"Graphile Starter 3.0","sectionId":"main","subpages":null},{"to":"/news/20200317-migrate-01/","title":"Graphile Migrate 0.1","sectionId":"main","subpages":null},{"to":"/news/20200205-worker-04/","title":"Graphile Worker 0.4","sectionId":"main","subpages":null},{"to":"/news/20200131-fosdem/","title":"Graphile Goes to FOSDEM 2020","sectionId":"misc","subpages":null},{"to":"/news/graphile-starter/","title":"Graphile Starter Released","sectionId":"main","subpages":null},{"to":"/news/postgraphile-version-4-5/","title":"PostGraphile 4.5 - Explain Feature","sectionId":"main","subpages":null},{"to":"/news/20191104-reactive-conf/","title":"Increasing velocity with GraphQL and Postgres","sectionId":"misc","subpages":null},{"to":"/news/postgraphile-version-4-4/","title":"PostGraphile 4.4 - Real-time","sectionId":"main","subpages":null},{"to":"/news/postgraphile-version-4-1/","title":"PostGraphile 4.1 - Better Webpackability","sectionId":"main","subpages":null},{"to":"/news/20181023-graphql-finland/","title":"Database-Driven GraphQL Development","sectionId":"misc","subpages":null},{"to":"/news/postgraphile-version-4/","title":"PostGraphile 4.0 - Fantastic Performance","sectionId":"main","subpages":null},{"to":"/news/press-kit/","title":"Graphile Press Kit","sectionId":"about","subpages":null}]}},{"node":{"id":"9c6fa765-467b-52be-8edb-9e45ddaee2c7","name":"graphile-build","sections":[{"id":"guides","title":"Overview"},{"id":"library-reference","title":"Using the Library"},{"id":"plugin-reference","title":"Building a Plugin"}],"pages":[{"to":"/graphile-build/getting-started/","title":"Getting Started","sectionId":"guides","subpages":[]},{"to":"/graphile-build/plugins/","title":"Plugins","sectionId":"guides","subpages":[]},{"to":"/graphile-build/hooks/","title":"Hooks","sectionId":"guides","subpages":[]},{"to":"/graphile-build/look-ahead/","title":"Look Ahead","sectionId":"guides","subpages":[]},{"to":"/graphile-build/graphile-build/","title":"graphile-build","sectionId":"library-reference","subpages":[]},{"to":"/graphile-build/schema-builder/","title":"SchemaBuilder","sectionId":"library-reference","subpages":[]},{"to":"/graphile-build/plugin-options/","title":"Options","sectionId":"library-reference","subpages":[]},{"to":"/graphile-build/default-plugins/","title":"Default Plugins","sectionId":"library-reference","subpages":[]},{"to":"/graphile-build/omitting-plugins/","title":"Omitting Plugins","sectionId":"guides","subpages":[]},{"to":"/graphile-build/all-hooks/","title":"All Hooks","sectionId":"plugin-reference","subpages":[]},{"to":"/graphile-build/build-object/","title":"Build Object","sectionId":"plugin-reference","subpages":[]},{"to":"/graphile-build/context-object/","title":"Context Object","sectionId":"plugin-reference","subpages":[]},{"to":"/graphile-build/schema-builder/","title":"SchemaBuilder","sectionId":"plugin-reference","subpages":[]}]}},{"node":{"id":"db912f43-977c-5927-bd35-643354670ea0","name":"postgraphile","sections":[{"id":"overview","title":"Overview"},{"id":"basics","title":"Operation"},{"id":"customising","title":"Customising"},{"id":"guides","title":"Guides"},{"id":"deploying","title":"Deploying"},{"id":"community","title":"Community"},{"id":"faq","title":"FAQ"}],"pages":[{"to":"/postgraphile/introduction/","title":"Introduction","sectionId":"overview","subpages":[]},{"to":"/postgraphile/examples/","title":"Example Gallery","sectionId":"overview","subpages":[]},{"to":"/postgraphile/usage/","title":"Usage","sectionId":"overview","subpages":[{"to":"/postgraphile/usage-cli/","title":"CLI Usage","sectionId":"overview"},{"to":"/postgraphile/usage-library/","title":"Library Usage","sectionId":"overview"},{"to":"/postgraphile/usage-schema/","title":"Schema-only Usage","sectionId":"overview"}]},{"to":"/postgraphile/performance/","title":"Performance","sectionId":"overview","subpages":[]},{"to":"/postgraphile/requirements/","title":"Requirements","sectionId":"overview","subpages":[]},{"to":"/postgraphile/required-knowledge/","title":"Required Knowledge","sectionId":"overview","subpages":[]},{"to":"/postgraphile/quick-start-guide/","title":"Quick Start Guide","sectionId":"basics","subpages":[]},{"to":"/postgraphile/namespaces/","title":"Namespaces","sectionId":"basics","subpages":null},{"to":"/postgraphile/inflection/","title":"Inflection","sectionId":"basics","subpages":null},{"to":"/postgraphile/tables/","title":"Tables","sectionId":"basics","subpages":[{"to":"/postgraphile/relations/","title":"Relations","sectionId":"basics"},{"to":"/postgraphile/connections/","title":"Connections","sectionId":"basics"},{"to":"/postgraphile/filtering/","title":"Filtering","sectionId":"basics"},{"to":"/postgraphile/crud-mutations/","title":"CRUD Mutations","sectionId":"basics"},{"to":"/postgraphile/node-id/","title":"nodeId / id","sectionId":"basics"}]},{"to":"/postgraphile/functions/","title":"Functions","sectionId":"basics","subpages":[{"to":"/postgraphile/computed-columns/","title":"Computed Columns","sectionId":"basics"},{"to":"/postgraphile/custom-queries/","title":"Custom Queries","sectionId":"basics"},{"to":"/postgraphile/custom-mutations/","title":"Custom Mutations","sectionId":"basics"},{"to":"/postgraphile/function-restrictions/","title":"Function Restrictions","sectionId":"basics"},{"to":"/postgraphile/function-gallery/","title":"Function Gallery","sectionId":"customising"}]},{"to":"/postgraphile/enums/","title":"Enums","sectionId":"basics","subpages":[]},{"to":"/postgraphile/views/","title":"Views","sectionId":"basics","subpages":[]},{"to":"/postgraphile/aggregates/","title":"Aggregates","sectionId":"basics","subpages":[]},{"to":"/postgraphile/postgresql-indexes/","title":"PostgreSQL Indexes","sectionId":"basics","subpages":[]},{"to":"/postgraphile/security/","title":"Security","sectionId":"basics","subpages":[]},{"to":"/postgraphile/realtime/","title":"Realtime","sectionId":"basics","subpages":[{"to":"/postgraphile/subscriptions/","title":"Subscriptions","sectionId":"basics"},{"to":"/postgraphile/live-queries/","title":"Live Queries","sectionId":"basics"}]},{"to":"/postgraphile/background-tasks/","title":"Background Tasks","sectionId":"basics","subpages":[]},{"to":"/postgraphile/reserved-keywords/","title":"Reserved Keywords","sectionId":"basics","subpages":[]},{"to":"/postgraphile/debugging/","title":"Debugging","sectionId":"basics","subpages":[]},{"to":"/postgraphile/smart-tags/","title":"Smart Tags","sectionId":"customising","subpages":[{"to":"/postgraphile/smart-tags-file/","title":"The postgraphile.tags.json5 file","sectionId":"customising"},{"to":"/postgraphile/smart-comments/","title":"Database Smart Comments","sectionId":"customising"}]},{"to":"/postgraphile/extending/","title":"Schema Plugins","sectionId":"customising","subpages":[{"to":"/postgraphile/make-add-inflectors-plugin/","title":"makeAddInflectorsPlugin","sectionId":"customising"},{"to":"/postgraphile/make-change-nullability-plugin/","title":"makeChangeNullabilityPlugin","sectionId":"customising"},{"to":"/postgraphile/make-extend-schema-plugin/","title":"makeExtendSchemaPlugin","sectionId":"customising"},{"to":"/postgraphile/make-process-schema-plugin/","title":"makeProcessSchemaPlugin","sectionId":"customising"},{"to":"/postgraphile/make-wrap-resolvers-plugin/","title":"makeWrapResolversPlugin","sectionId":"customising"},{"to":"/postgraphile/make-add-pg-table-condition-plugin/","title":"makeAddPgTableConditionPlugin","sectionId":"customising"},{"to":"/postgraphile/make-add-pg-table-order-by-plugin/","title":"makeAddPgTableOrderByPlugin","sectionId":"customising"},{"to":"/postgraphile/make-pg-smart-tags-plugin/","title":"makePgSmartTagsPlugin","sectionId":"customising"},{"to":"/postgraphile/make-plugin-by-combining-plugins/","title":"makePluginByCombiningPlugins","sectionId":"customising"},{"to":"/postgraphile/extending-raw/","title":"Graphile Engine","sectionId":"customising"},{"to":"/postgraphile/plugin-gallery/","title":"Plugin Gallery","sectionId":"customising"},{"to":"/postgraphile/community-plugins/","title":"Community Plugins","sectionId":"customising"}]},{"to":"/postgraphile/plugins/","title":"Server Plugins","sectionId":"customising","subpages":[]},{"to":"/postgraphile/postgresql-schema-design/","title":"PostgreSQL Schema Design","sectionId":"guides","subpages":[]},{"to":"/postgraphile/evaluating/","title":"Evaluating for your Project","sectionId":"guides","subpages":[]},{"to":"/postgraphile/best-practices/","title":"Best Practices","sectionId":"guides","subpages":[]},{"to":"/postgraphile/production/","title":"Production Considerations","sectionId":"guides","subpages":[]},{"to":"/postgraphile/jwt-guide/","title":"PostGraphile JWT Guide","sectionId":"guides","subpages":[]},{"to":"/postgraphile/jwk-verification/","title":"JWK Verification (e.g. Auth0)","sectionId":"guides","subpages":[]},{"to":"/postgraphile/default-role/","title":"The Default Role","sectionId":"guides","subpages":[]},{"to":"/postgraphile/pg-pubsub-migration/","title":"@graphile/pg-pubsub Migration Guide","sectionId":"guides","subpages":[]},{"to":"/postgraphile/v4-new-features/","title":"v4 Feature Guide","sectionId":"guides","subpages":[]},{"to":"/postgraphile/v3-migration/","title":"v3 → v4 Migration Guide","sectionId":"guides","subpages":[]},{"to":"/postgraphile/testing-jest/","title":"Testing with Jest","sectionId":"guides","subpages":[]},{"to":"/postgraphile/bundling-webpack/","title":"Bundling with Webpack","sectionId":"guides","subpages":[]},{"to":"/postgraphile/multiple-schemas/","title":"Multiple GraphQL Schemas","sectionId":"guides","subpages":[]},{"to":"/postgraphile/running-postgraphile-in-docker/","title":"Running PostGraphile in Docker","sectionId":"guides","subpages":[]},{"to":"/postgraphile/running-postgraphile-as-a-library-in-docker/","title":"Running PostGraphile as a library in Docker","sectionId":"guides","subpages":[]},{"to":"/postgraphile/deploying-heroku/","title":"Deploying to Heroku","sectionId":"deploying","subpages":[]},{"to":"/postgraphile/deploying-docker/","title":"Deploying with Docker","sectionId":"deploying","subpages":[]},{"to":"/postgraphile/deploying-lambda/","title":"Deploying to AWS Lambda","sectionId":"deploying","subpages":[]},{"to":"/postgraphile/deploying-gcp/","title":"Deploying to GCP","sectionId":"deploying","subpages":[]},{"to":"/postgraphile/community-contributions/","title":"Community Contributions","sectionId":"community","subpages":[]},{"to":"/postgraphile/community-chat/","title":"Community Chat","sectionId":"community","subpages":[]},{"to":"/postgraphile/code-of-conduct/","title":"Code of Conduct","sectionId":"community","subpages":[]},{"to":"/postgraphile/introspection/","title":"Introspection?","sectionId":"faq","subpages":[]},{"to":"/postgraphile/why-nullable/","title":"Why is it nullable?","sectionId":"faq","subpages":[]},{"to":"/postgraphile/versioning-policy/","title":"Versioning policy?","sectionId":"faq","subpages":[]}]}},{"node":{"id":"f6dbcb59-d3dc-5c85-a547-0f413b0cfdfa","name":"graphile-build-pg","sections":[{"id":"overview","title":"Usage"}],"pages":[{"to":"/graphile-build-pg/settings/","title":"Settings","sectionId":"overview","subpages":[]}]}}]},"examples":{"edges":[{"node":{"category":"functions","id":"f1a86695-1bfb-5a2c-bd3c-e95a8ba27c2c","title":"Custom queries","examples":[{"title":"Logged in user field","example":"create function viewer()\nreturns users\nas $$\n  select *\n  from users\n  where id = current_user_id();\n  /*\n   * current_user_id() is a function\n   * that returns the logged in user's\n   * id, e.g. by extracting from the JWT\n   * or indicated via pgSettings.\n   */\n$$ language sql stable set search_path from current;\n","exampleLanguage":"sql","result":"--- Original GraphQL Schema\n+++ Modified GraphQL Schema\n@@ -1795,6 +1795,7 @@\n \n   \"\"\"Chosen by fair dice roll. Guaranteed to be random. XKCD#221\"\"\"\n   randomNumber: Int\n+  viewer: User\n \n   \"\"\"Reads a single `Forum` using its globally unique `ID`.\"\"\"\n   forumByNodeId(\n","resultLanguage":"diff"}]}},{"node":{"category":"functions","id":"0c30881e-d050-59f7-8e3e-2ef5f399714d","title":"Computed columns","examples":[{"title":"User primary email","example":"/*\n * Returns the primary email of the\n * current user; for all other users\n * this function will return null.\n */\ncreate function \"users_primaryEmail\"(u users)\nreturns text\nas $$\n  select email\n  from user_emails\n  where user_id = current_user_id()\n  and user_id = u.id\n  and is_verified is true\n  order by id asc\n  limit 1;\n$$ language sql stable set search_path from current;\n","exampleLanguage":"sql","result":"--- Original GraphQL Schema\n+++ Modified GraphQL Schema\n@@ -3130,6 +3130,7 @@\n     \"\"\"\n     condition: QuizEntryCondition\n   ): QuizEntriesConnection!\n+  primaryEmail: String\n }\n \n \"\"\"\n","resultLanguage":"diff"}]}},{"node":{"category":"functions","id":"8addbbdb-d6cb-5a99-bedb-83c6da6c9731","title":"Custom mutations","examples":[{"title":"Insert multiple records","example":"/**\n * Occasionally you'll want to create a bunch of rows in different tables in a\n * single mutation. Here's an example of how to do that.\n *\n * Pretend we're registering quiz entries, and we want to store each answer in\n * its own table as we want to be able to operate on the answers independently\n * later.\n *\n * This means we want:\n *\n *  1. A mutation that takes input data for inserting one quiz entry and\n *  multiple answers.\n *  2. A function that inserts a new quiz entry, inserts an answer for each\n *  answer provided in the input data, and connects each answer to the created\n *  quiz entry.\n *  3. Finally, we want the function to return the inserted quiz entry itself.\n */\n\n/**\n * This type is used for input in the mutation\n */\ncreate type quiz_entry_input as (\n  question text,\n  answer int\n);\n\n/**\n * Here's the function that gets turned into a \"custom mutation\"\n */\ncreate function add_quiz_entry(\n  quiz_id int,\n  answers quiz_entry_input[]\n)\nreturns quiz_entry\nas $$\n  declare\n    q quiz_entry;\n    a quiz_entry_answer;\n  begin\n    insert into quiz_entry(user_id, quiz_id)\n      values(current_user_id(), quiz_id)\n      returning * into q;\n\n    foreach a in array answers loop\n      insert into quiz_entry_answer(quiz_entry_id, question, answer)\n        values (quiz_id, a.question, a.answer);\n    end loop;\n\n    return q;\n  end;\n$$ language plpgsql volatile strict set search_path from current;\n","exampleLanguage":"sql","result":"--- Original GraphQL Schema\n+++ Modified GraphQL Schema\n@@ -1,3 +1,41 @@\n+\"\"\"All input for the `addQuizEntry` mutation.\"\"\"\n+input AddQuizEntryInput {\n+  \"\"\"\n+  An arbitrary string value with no semantic meaning. Will be included in the\n+  payload verbatim. May be used to track mutations by the client.\n+  \"\"\"\n+  clientMutationId: String\n+  quizId: Int!\n+  answers: [QuizEntryInputRecordInput]!\n+}\n+\n+\"\"\"The output of our `addQuizEntry` mutation.\"\"\"\n+type AddQuizEntryPayload {\n+  \"\"\"\n+  The exact same `clientMutationId` that was provided in the mutation input,\n+  unchanged and unused. May be used by a client to track mutations.\n+  \"\"\"\n+  clientMutationId: String\n+  quizEntry: QuizEntry\n+\n+  \"\"\"\n+  Our root query field type. Allows us to run any query from our mutation payload.\n+  \"\"\"\n+  query: Query\n+\n+  \"\"\"Reads a single `User` that is related to this `QuizEntry`.\"\"\"\n+  user: User\n+\n+  \"\"\"Reads a single `Quiz` that is related to this `QuizEntry`.\"\"\"\n+  quiz: Quiz\n+\n+  \"\"\"An edge for our `QuizEntry`. May be used by Relay 1.\"\"\"\n+  quizEntryEdge(\n+    \"\"\"The method to use when ordering `QuizEntry`.\"\"\"\n+    orderBy: [QuizEntriesOrderBy!] = [PRIMARY_KEY_ASC]\n+  ): QuizEntriesEdge\n+}\n+\n \"\"\"\n A floating point number that requires more precision than IEEE 754 binary 64\n \"\"\"\n@@ -1472,6 +1510,12 @@\n     \"\"\"\n     input: DeleteUserByUsernameInput!\n   ): DeleteUserPayload\n+  addQuizEntry(\n+    \"\"\"\n+    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n+    \"\"\"\n+    input: AddQuizEntryInput!\n+  ): AddQuizEntryPayload\n \n   \"\"\"\n   If you've forgotten your password, give us one of your email addresses and we'\n@@ -2115,6 +2159,12 @@\n   quizId: Int!\n }\n \n+\"\"\"An input for mutations affecting `QuizEntryInputRecord`\"\"\"\n+input QuizEntryInputRecordInput {\n+  question: String\n+  answer: Int\n+}\n+\n \"\"\"\n Represents an update to a `QuizEntry`. Fields that are set will be updated.\n \"\"\"\n","resultLanguage":"diff"}]}},{"node":{"category":"plugins","id":"c5f90f4e-c704-5f6c-9363-030653ff1d52","title":"Inflector","examples":[{"title":"PgRenamePatchToPatchSetPlugin","example":"/**\n * Simply renames the `UserPatch` and `PostPatch` type names to be called\n * `UserPatchSet` and `PostPatchSet` instead.\n *\n * Not particularly useful, just an example. ('PatchSet' chosen to minimise\n * diff to make example clearer.)\n *\n * Replaces this inflector:\n * https://github.com/graphile/graphile-engine/blob/f3fb3878692c6959e481e517375da66503428dc5/packages/graphile-build-pg/src/plugins/PgBasicsPlugin.js#L309-L311\n */\nmodule.exports = function PgRenamePatchToPatchSetPlugin(\n  builder\n) {\n  builder.hook(\n    \"inflection\",\n    inflector => ({\n      // Retain the existing inflectors\n      ...inflector,\n\n      // Override the patchType inflector\n      patchType(typeName) {\n        // return this.upperCamelCase(`${typeName}-patch`);\n        return this.upperCamelCase(\n          `${typeName}-patch-set`\n        );\n      },\n    })\n  );\n};\n","exampleLanguage":"javascript","result":"--- Original GraphQL Schema\n+++ Modified GraphQL Schema\n@@ -979,7 +979,7 @@\n \"\"\"\n Represents an update to a `Forum`. Fields that are set will be updated.\n \"\"\"\n-input ForumPatch {\n+input ForumPatchSet {\n   id: Int\n \n   \"\"\"An URL-safe alias for the `Forum`.\"\"\"\n@@ -1573,7 +1573,7 @@\n }\n \n \"\"\"Represents an update to a `Post`. Fields that are set will be updated.\"\"\"\n-input PostPatch {\n+input PostPatchSet {\n   \"\"\"The body of the `Topic`, which Posts reply to.\"\"\"\n   body: Html\n }\n@@ -2043,7 +2043,7 @@\n \"\"\"\n Represents an update to a `QuizEntryAnswer`. Fields that are set will be updated.\n \"\"\"\n-input QuizEntryAnswerPatch {\n+input QuizEntryAnswerPatchSet {\n   id: Int\n   quizEntryId: Int\n   question: String\n@@ -2118,7 +2118,7 @@\n \"\"\"\n Represents an update to a `QuizEntry`. Fields that are set will be updated.\n \"\"\"\n-input QuizEntryPatch {\n+input QuizEntryPatchSet {\n   id: Int\n   userId: Int\n   quizId: Int\n@@ -2134,7 +2134,7 @@\n }\n \n \"\"\"Represents an update to a `Quiz`. Fields that are set will be updated.\"\"\"\n-input QuizPatch {\n+input QuizPatchSet {\n   id: Int\n   name: String\n   updatedAt: Datetime\n@@ -2317,7 +2317,7 @@\n \"\"\"\n Represents an update to a `Topic`. Fields that are set will be updated.\n \"\"\"\n-input TopicPatch {\n+input TopicPatchSet {\n   id: Int\n   forumId: Int\n   authorId: Int\n@@ -2394,7 +2394,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `Forum` being updated.\n   \"\"\"\n-  patch: ForumPatch!\n+  patch: ForumPatchSet!\n }\n \n \"\"\"All input for the `updateForumBySlug` mutation.\"\"\"\n@@ -2408,7 +2408,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `Forum` being updated.\n   \"\"\"\n-  patch: ForumPatch!\n+  patch: ForumPatchSet!\n \n   \"\"\"An URL-safe alias for the `Forum`.\"\"\"\n   slug: String!\n@@ -2425,7 +2425,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `Forum` being updated.\n   \"\"\"\n-  patch: ForumPatch!\n+  patch: ForumPatchSet!\n   id: Int!\n }\n \n@@ -2468,7 +2468,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `Post` being updated.\n   \"\"\"\n-  patch: PostPatch!\n+  patch: PostPatchSet!\n }\n \n \"\"\"All input for the `updatePost` mutation.\"\"\"\n@@ -2482,7 +2482,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `Post` being updated.\n   \"\"\"\n-  patch: PostPatch!\n+  patch: PostPatchSet!\n   id: Int!\n }\n \n@@ -2531,7 +2531,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `Quiz` being updated.\n   \"\"\"\n-  patch: QuizPatch!\n+  patch: QuizPatchSet!\n }\n \n \"\"\"All input for the `updateQuizEntryAnswerByNodeId` mutation.\"\"\"\n@@ -2550,7 +2550,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `QuizEntryAnswer` being updated.\n   \"\"\"\n-  patch: QuizEntryAnswerPatch!\n+  patch: QuizEntryAnswerPatchSet!\n }\n \n \"\"\"All input for the `updateQuizEntryAnswer` mutation.\"\"\"\n@@ -2564,7 +2564,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `QuizEntryAnswer` being updated.\n   \"\"\"\n-  patch: QuizEntryAnswerPatch!\n+  patch: QuizEntryAnswerPatchSet!\n   id: Int!\n }\n \n@@ -2610,7 +2610,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `QuizEntry` being updated.\n   \"\"\"\n-  patch: QuizEntryPatch!\n+  patch: QuizEntryPatchSet!\n }\n \n \"\"\"All input for the `updateQuizEntry` mutation.\"\"\"\n@@ -2624,7 +2624,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `QuizEntry` being updated.\n   \"\"\"\n-  patch: QuizEntryPatch!\n+  patch: QuizEntryPatchSet!\n   id: Int!\n }\n \n@@ -2668,7 +2668,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `Quiz` being updated.\n   \"\"\"\n-  patch: QuizPatch!\n+  patch: QuizPatchSet!\n   id: Int!\n }\n \n@@ -2711,7 +2711,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `Topic` being updated.\n   \"\"\"\n-  patch: TopicPatch!\n+  patch: TopicPatchSet!\n }\n \n \"\"\"All input for the `updateTopic` mutation.\"\"\"\n@@ -2725,7 +2725,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `Topic` being updated.\n   \"\"\"\n-  patch: TopicPatch!\n+  patch: TopicPatchSet!\n   id: Int!\n }\n \n@@ -2774,7 +2774,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `UserAuthentication` being updated.\n   \"\"\"\n-  patch: UserAuthenticationPatch!\n+  patch: UserAuthenticationPatchSet!\n }\n \n \"\"\"\n@@ -2790,7 +2790,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `UserAuthentication` being updated.\n   \"\"\"\n-  patch: UserAuthenticationPatch!\n+  patch: UserAuthenticationPatchSet!\n \n   \"\"\"The login service used, e.g. `twitter` or `github`.\"\"\"\n   service: String!\n@@ -2810,7 +2810,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `UserAuthentication` being updated.\n   \"\"\"\n-  patch: UserAuthenticationPatch!\n+  patch: UserAuthenticationPatchSet!\n   id: Int!\n }\n \n@@ -2853,7 +2853,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `User` being updated.\n   \"\"\"\n-  patch: UserPatch!\n+  patch: UserPatchSet!\n }\n \n \"\"\"All input for the `updateUserByUsername` mutation.\"\"\"\n@@ -2867,7 +2867,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `User` being updated.\n   \"\"\"\n-  patch: UserPatch!\n+  patch: UserPatchSet!\n \n   \"\"\"Public-facing username (or 'handle') of the user.\"\"\"\n   username: String!\n@@ -2889,7 +2889,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `UserEmail` being updated.\n   \"\"\"\n-  patch: UserEmailPatch!\n+  patch: UserEmailPatchSet!\n }\n \n \"\"\"All input for the `updateUserEmailByUserIdAndEmail` mutation.\"\"\"\n@@ -2903,7 +2903,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `UserEmail` being updated.\n   \"\"\"\n-  patch: UserEmailPatch!\n+  patch: UserEmailPatchSet!\n   userId: Int!\n \n   \"\"\"The users email address, in `a@b.c` format.\"\"\"\n@@ -2921,7 +2921,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `UserEmail` being updated.\n   \"\"\"\n-  patch: UserEmailPatch!\n+  patch: UserEmailPatchSet!\n   id: Int!\n }\n \n@@ -2962,7 +2962,7 @@\n   \"\"\"\n   An object where the defined keys will be set on the `User` being updated.\n   \"\"\"\n-  patch: UserPatch!\n+  patch: UserPatchSet!\n \n   \"\"\"Unique identifier for the user.\"\"\"\n   id: Int!\n@@ -3167,7 +3167,7 @@\n \"\"\"\n Represents an update to a `UserAuthentication`. Fields that are set will be updated.\n \"\"\"\n-input UserAuthenticationPatch {\n+input UserAuthenticationPatchSet {\n   id: Int\n \n   \"\"\"The login service used, e.g. `twitter` or `github`.\"\"\"\n@@ -3273,7 +3273,7 @@\n \"\"\"\n Represents an update to a `UserEmail`. Fields that are set will be updated.\n \"\"\"\n-input UserEmailPatch {\n+input UserEmailPatchSet {\n   id: Int\n   userId: Int\n \n@@ -3355,7 +3355,7 @@\n }\n \n \"\"\"Represents an update to a `User`. Fields that are set will be updated.\"\"\"\n-input UserPatch {\n+input UserPatchSet {\n   \"\"\"Unique identifier for the user.\"\"\"\n   id: Int\n \n","resultLanguage":"diff"},{"title":"PgShortenAllRowsInflectorPlugin","example":"/**\n * Simply renames the `allUsers` and `allPosts` Query fields to `users` and\n * `posts` respectively.\n *\n * Not particularly useful, just an example.\n *\n * Replaces this inflector:\n * https://github.com/graphile/graphile-engine/blob/f3fb3878692c6959e481e517375da66503428dc5/packages/graphile-build-pg/src/plugins/PgBasicsPlugin.js#L460-L464\n */\nmodule.exports = function PgShortenAllRowsInflectorPlugin(\n  builder\n) {\n  builder.hook(\n    \"inflection\",\n    inflector => ({\n      // Retain the existing inflectors\n      ...inflector,\n\n      // Override the allRows inflector\n      allRows(table) {\n        return this.camelCase(\n          // Was: `all-${this.pluralize(this._singularizedTableName(table))}`\n          // Now:\n          this.pluralize(\n            this._singularizedTableName(\n              table\n            )\n          )\n        );\n      },\n    })\n  );\n};\n","exampleLanguage":"javascript","result":"","resultLanguage":"diff"}]}},{"node":{"category":"plugins","id":"a5b3b7e0-cf0e-5962-96c8-e2230b819469","title":"Types","examples":[{"title":"PgNumericToFloatPlugin","example":"/**\n * Use of this plugin is NOT recommended, please see\n * PgSmallNumericToFloatPlugin for a more appropriate replacement if you need\n * one.\n *\n * This plugin will have PostGraphile use `GraphQLFloat` instead of `BigFloat`\n * for *all* DECIMAL / NUMERIC values, for making PostGraphile v4 slightly more\n * backwards-compatible with v3.\n *\n * It's generally a bad idea to use floating point numbers to represent\n * arbitrary precision numbers such as NUMERIC because loss of precision can\n * occur.\n */\nmodule.exports = function PgNumericToFloatPlugin(\n  builder\n) {\n  builder.hook(\"build\", build => {\n    // Register a type handler for NUMERIC / DECIMAL (oid = 1700), always\n    // returning the GraphQLFloat type\n    build.pgRegisterGqlTypeByTypeId(\n      \"1700\",\n      () => build.graphql.GraphQLFloat\n    );\n    return build;\n  });\n};\n","exampleLanguage":"javascript","result":"--- Original GraphQL Schema\n+++ Modified GraphQL Schema\n@@ -1,8 +1,3 @@\n-\"\"\"\n-A floating point number that requires more precision than IEEE 754 binary 64\n-\"\"\"\n-scalar BigFloat\n-\n \"\"\"All input for the create `Forum` mutation.\"\"\"\n input CreateForumInput {\n   \"\"\"\n@@ -1863,8 +1858,8 @@\n   id: Int!\n   name: String!\n   updatedAt: Datetime!\n-  precision12Scale2: BigFloat\n-  precision200Scale100: BigFloat\n+  precision12Scale2: Float\n+  precision200Scale100: Float\n \n   \"\"\"Reads and enables pagination through a set of `QuizEntry`.\"\"\"\n   quizEntries(\n@@ -1910,10 +1905,10 @@\n   updatedAt: Datetime\n \n   \"\"\"Checks for equality with the object’s `precision12Scale2` field.\"\"\"\n-  precision12Scale2: BigFloat\n+  precision12Scale2: Float\n \n   \"\"\"Checks for equality with the object’s `precision200Scale100` field.\"\"\"\n-  precision200Scale100: BigFloat\n+  precision200Scale100: Float\n }\n \n \"\"\"A connection to a list of `QuizEntry` values.\"\"\"\n@@ -2129,8 +2124,8 @@\n   id: Int\n   name: String!\n   updatedAt: Datetime\n-  precision12Scale2: BigFloat\n-  precision200Scale100: BigFloat\n+  precision12Scale2: Float\n+  precision200Scale100: Float\n }\n \n \"\"\"Represents an update to a `Quiz`. Fields that are set will be updated.\"\"\"\n@@ -2138,8 +2133,8 @@\n   id: Int\n   name: String\n   updatedAt: Datetime\n-  precision12Scale2: BigFloat\n-  precision200Scale100: BigFloat\n+  precision12Scale2: Float\n+  precision200Scale100: Float\n }\n \n \"\"\"A connection to a list of `Quiz` values.\"\"\"\n","resultLanguage":"diff"},{"title":"PgSmallNumericToFloatPlugin","example":"/**\n * This plugin will have PostGraphile use `GraphQLFloat` instead of `BigFloat`\n * for DECIMAL / NUMERIC values that have a precision and scale under the given\n * limits (currently 12 and 2 respectively).\n *\n * It's generally a bad idea to use floating point numbers to represent\n * arbitrary precision numbers such as NUMERIC because loss of precision can\n * occur; however some systems are okay with this compromise.\n */\nmodule.exports = function PgSmallNumericToFloatPlugin(\n  builder,\n  {\n    pgNumericToFloatPrecisionCap = 12,\n    pgNumericToFloatScaleCap = 2,\n  }\n) {\n  builder.hook(\"build\", build => {\n    // Register a type handler for NUMERIC / DECIMAL (oid = 1700)\n    build.pgRegisterGqlTypeByTypeId(\n      \"1700\",\n      (_set, modifier) => {\n        if (\n          modifier &&\n          typeof modifier ===\n            \"number\" &&\n          modifier > 0\n        ) {\n          // Ref: https://stackoverflow.com/a/3351120/141284\n          const precision =\n            ((modifier - 4) >> 16) &\n            65535;\n          const scale =\n            (modifier - 4) & 65535;\n          if (\n            precision <=\n              pgNumericToFloatPrecisionCap &&\n            scale <=\n              pgNumericToFloatScaleCap\n          ) {\n            // This number is no more precise than our cap, so we're declaring\n            // that we can handle it as a float:\n            return build.graphql\n              .GraphQLFloat;\n          }\n        }\n        // If all else fails, let PostGraphile do it's default handling - i.e.\n        // BigFloat\n        return null;\n      }\n    );\n\n    // We didn't modify _init, but we still must return it.\n    return build;\n  });\n};\n","exampleLanguage":"javascript","result":"--- Original GraphQL Schema\n+++ Modified GraphQL Schema\n@@ -1863,7 +1863,7 @@\n   id: Int!\n   name: String!\n   updatedAt: Datetime!\n-  precision12Scale2: BigFloat\n+  precision12Scale2: Float\n   precision200Scale100: BigFloat\n \n   \"\"\"Reads and enables pagination through a set of `QuizEntry`.\"\"\"\n@@ -1910,7 +1910,7 @@\n   updatedAt: Datetime\n \n   \"\"\"Checks for equality with the object’s `precision12Scale2` field.\"\"\"\n-  precision12Scale2: BigFloat\n+  precision12Scale2: Float\n \n   \"\"\"Checks for equality with the object’s `precision200Scale100` field.\"\"\"\n   precision200Scale100: BigFloat\n@@ -2129,7 +2129,7 @@\n   id: Int\n   name: String!\n   updatedAt: Datetime\n-  precision12Scale2: BigFloat\n+  precision12Scale2: Float\n   precision200Scale100: BigFloat\n }\n \n@@ -2138,7 +2138,7 @@\n   id: Int\n   name: String\n   updatedAt: Datetime\n-  precision12Scale2: BigFloat\n+  precision12Scale2: Float\n   precision200Scale100: BigFloat\n }\n \n","resultLanguage":"diff"},{"title":"SetInputObjectDefaultValue","example":"/**\n * This plugin sets a defaultValue on all input object fields that match the\n * given criteria (specifically the 'create' input types, for columns named\n * 'name')\n */\nmodule.exports = function SetInputObjectDefaultValue(\n  builder\n) {\n  builder.hook(\n    \"GraphQLInputObjectType:fields:field\",\n    (field, build, context) => {\n      const {\n        scope: {\n          isPgRowType,\n          isInputType,\n          isPgPatch,\n          pgFieldIntrospection: attr,\n        },\n      } = context;\n      if (\n        !isPgRowType ||\n        !isInputType ||\n        isPgPatch ||\n        !attr ||\n        attr.kind !== \"attribute\" ||\n        attr.name !== \"name\"\n      ) {\n        return field;\n      }\n\n      return {\n        ...field,\n        type: build.graphql.getNamedType(\n          field.type\n        ), // Since it has a default, it can be nullable\n        defaultValue:\n          // attr.tags.defaultValue: enables overriding this with a\n          // `@defaultValue Alice Smith` smart comment\n          attr.tags.defaultValue ||\n          \"Bobby Tables\",\n      };\n    }\n  );\n};\n","exampleLanguage":"javascript","result":"--- Original GraphQL Schema\n+++ Modified GraphQL Schema\n@@ -968,7 +968,7 @@\n   slug: String!\n \n   \"\"\"The name of the `Forum` (indicates its subject matter).\"\"\"\n-  name: String!\n+  name: String = \"Bobby Tables\"\n \n   \"\"\"A brief description of the `Forum` including it's purpose.\"\"\"\n   description: String\n@@ -2127,7 +2127,7 @@\n \"\"\"An input for mutations affecting `Quiz`\"\"\"\n input QuizInput {\n   id: Int\n-  name: String!\n+  name: String = \"Bobby Tables\"\n   updatedAt: Datetime\n   precision12Scale2: BigFloat\n   precision200Scale100: BigFloat\n@@ -3343,7 +3343,7 @@\n   username: String!\n \n   \"\"\"Public-facing name (or pseudonym) of the user.\"\"\"\n-  name: String\n+  name: String = \"Bobby Tables\"\n \n   \"\"\"Optional avatar URL.\"\"\"\n   avatarUrl: String\n","resultLanguage":"diff"}]}},{"node":{"category":"plugins","id":"573c161f-f98f-55d1-95d6-6f6edebaca42","title":"Mutation wrappers","examples":[{"title":"OverrideArgValuePlugin","example":"/**\n * This plugin sets the `input.quizPatch.updatedAt` to the current timestamp in\n * the `updateQuiz*` mutations IFF it's not already set.\n */\nmodule.exports = function SetInputObjectDefaultValue(\n  builder\n) {\n  builder.hook(\n    \"GraphQLObjectType:fields:field\",\n    (field, build, context) => {\n      const {\n        scope: {\n          isPgUpdateMutationField,\n          pgFieldIntrospection: table,\n        },\n      } = context;\n      if (\n        !isPgUpdateMutationField ||\n        table.kind !== \"class\" ||\n        table.name !== \"quiz\"\n      ) {\n        return field;\n      }\n\n      const oldResolve =\n        field.resolve;\n\n      return {\n        ...field,\n        resolve(\n          _mutation,\n          args,\n          context,\n          info\n        ) {\n          // Override the `updatedAt` field if it's not already set.\n          if (\n            args.input.quizPatch\n              .updatedAt == null\n          ) {\n            args.input.quizPatch.updatedAt = new Date().toISOString();\n          }\n          return oldResolve(\n            _mutation,\n            args,\n            context,\n            info\n          );\n        },\n      };\n    }\n  );\n};\n\n// Tested via:\n// npx postgraphile --append-plugins @graphile-contrib/pg-simplify-inflector,`pwd`/examples/plugins/0300_mutation_wrappers/OverrideArgValuePlugin.js -c graphile_org_demo -s app_public\n","exampleLanguage":"javascript","result":"","resultLanguage":"diff"}]}},{"node":{"category":"plugins","id":"a075db74-d68f-5c74-8757-3a8bb2214bb8","title":"Customisation","examples":[{"title":"OmitMutationsByDefaultPlugin","example":"/**\n * This plugin treats any table that doesn't have an `@omit` comment as if it\n * had `@omit create,update,delete` (thereby disabling mutations).\n *\n * Override it by adding a smart comment to the table. To restore all\n * mutations, do `COMMENT ON my_table IS E'@omit :';` (the `:` is special\n * syntax for \"nothing\").\n */\nmodule.exports = function OmitMutationsByDefaultPlugin(\n  builder\n) {\n  builder.hook(\"build\", build => {\n    const {\n      pgIntrospectionResultsByKind,\n    } = build;\n    pgIntrospectionResultsByKind.class\n      .filter(\n        table =>\n          table.isSelectable &&\n          table.namespace\n      )\n      .forEach(table => {\n        if (!(\"omit\" in table.tags)) {\n          table.tags.omit =\n            \"create,update,delete\";\n        }\n      });\n    return build;\n  });\n};\n\n// Tested via:\n// npx postgraphile --append-plugins @graphile-contrib/pg-simplify-inflector,`pwd`/examples/plugins/0400_customisation/OmitMutationsByDefaultPlugin.js -c graphile_org_demo -s app_public\n","exampleLanguage":"javascript","result":"--- Original GraphQL Schema\n+++ Modified GraphQL Schema\n@@ -3,41 +3,6 @@\n \"\"\"\n scalar BigFloat\n \n-\"\"\"All input for the create `Forum` mutation.\"\"\"\n-input CreateForumInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `Forum` to be created by this mutation.\"\"\"\n-  forum: ForumInput!\n-}\n-\n-\"\"\"The output of our create `Forum` mutation.\"\"\"\n-type CreateForumPayload {\n-  \"\"\"\n-  The exact same `clientMutationId` that was provided in the mutation input,\n-  unchanged and unused. May be used by a client to track mutations.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `Forum` that was created by this mutation.\"\"\"\n-  forum: Forum\n-\n-  \"\"\"\n-  Our root query field type. Allows us to run any query from our mutation payload.\n-  \"\"\"\n-  query: Query\n-\n-  \"\"\"An edge for our `Forum`. May be used by Relay 1.\"\"\"\n-  forumEdge(\n-    \"\"\"The method to use when ordering `Forum`.\"\"\"\n-    orderBy: [ForumsOrderBy!] = [PRIMARY_KEY_ASC]\n-  ): ForumsEdge\n-}\n-\n \"\"\"All input for the create `Post` mutation.\"\"\"\n input CreatePostInput {\n   \"\"\"\n@@ -79,120 +44,6 @@\n   ): PostsEdge\n }\n \n-\"\"\"All input for the create `QuizEntryAnswer` mutation.\"\"\"\n-input CreateQuizEntryAnswerInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `QuizEntryAnswer` to be created by this mutation.\"\"\"\n-  quizEntryAnswer: QuizEntryAnswerInput!\n-}\n-\n-\"\"\"The output of our create `QuizEntryAnswer` mutation.\"\"\"\n-type CreateQuizEntryAnswerPayload {\n-  \"\"\"\n-  The exact same `clientMutationId` that was provided in the mutation input,\n-  unchanged and unused. May be used by a client to track mutations.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `QuizEntryAnswer` that was created by this mutation.\"\"\"\n-  quizEntryAnswer: QuizEntryAnswer\n-\n-  \"\"\"\n-  Our root query field type. Allows us to run any query from our mutation payload.\n-  \"\"\"\n-  query: Query\n-\n-  \"\"\"Reads a single `QuizEntry` that is related to this `QuizEntryAnswer`.\"\"\"\n-  quizEntry: QuizEntry\n-\n-  \"\"\"An edge for our `QuizEntryAnswer`. May be used by Relay 1.\"\"\"\n-  quizEntryAnswerEdge(\n-    \"\"\"The method to use when ordering `QuizEntryAnswer`.\"\"\"\n-    orderBy: [QuizEntryAnswersOrderBy!] = [PRIMARY_KEY_ASC]\n-  ): QuizEntryAnswersEdge\n-}\n-\n-\"\"\"All input for the create `QuizEntry` mutation.\"\"\"\n-input CreateQuizEntryInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `QuizEntry` to be created by this mutation.\"\"\"\n-  quizEntry: QuizEntryInput!\n-}\n-\n-\"\"\"The output of our create `QuizEntry` mutation.\"\"\"\n-type CreateQuizEntryPayload {\n-  \"\"\"\n-  The exact same `clientMutationId` that was provided in the mutation input,\n-  unchanged and unused. May be used by a client to track mutations.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `QuizEntry` that was created by this mutation.\"\"\"\n-  quizEntry: QuizEntry\n-\n-  \"\"\"\n-  Our root query field type. Allows us to run any query from our mutation payload.\n-  \"\"\"\n-  query: Query\n-\n-  \"\"\"Reads a single `User` that is related to this `QuizEntry`.\"\"\"\n-  user: User\n-\n-  \"\"\"Reads a single `Quiz` that is related to this `QuizEntry`.\"\"\"\n-  quiz: Quiz\n-\n-  \"\"\"An edge for our `QuizEntry`. May be used by Relay 1.\"\"\"\n-  quizEntryEdge(\n-    \"\"\"The method to use when ordering `QuizEntry`.\"\"\"\n-    orderBy: [QuizEntriesOrderBy!] = [PRIMARY_KEY_ASC]\n-  ): QuizEntriesEdge\n-}\n-\n-\"\"\"All input for the create `Quiz` mutation.\"\"\"\n-input CreateQuizInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `Quiz` to be created by this mutation.\"\"\"\n-  quiz: QuizInput!\n-}\n-\n-\"\"\"The output of our create `Quiz` mutation.\"\"\"\n-type CreateQuizPayload {\n-  \"\"\"\n-  The exact same `clientMutationId` that was provided in the mutation input,\n-  unchanged and unused. May be used by a client to track mutations.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `Quiz` that was created by this mutation.\"\"\"\n-  quiz: Quiz\n-\n-  \"\"\"\n-  Our root query field type. Allows us to run any query from our mutation payload.\n-  \"\"\"\n-  query: Query\n-\n-  \"\"\"An edge for our `Quiz`. May be used by Relay 1.\"\"\"\n-  quizEdge(\n-    \"\"\"The method to use when ordering `Quiz`.\"\"\"\n-    orderBy: [QuizzesOrderBy!] = [PRIMARY_KEY_ASC]\n-  ): QuizzesEdge\n-}\n-\n \"\"\"All input for the create `Topic` mutation.\"\"\"\n input CreateTopicInput {\n   \"\"\"\n@@ -351,66 +202,6 @@\n \"\"\"\n scalar Datetime\n \n-\"\"\"All input for the `deleteForumByNodeId` mutation.\"\"\"\n-input DeleteForumByNodeIdInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"\n-  The globally unique `ID` which will identify a single `Forum` to be deleted.\n-  \"\"\"\n-  nodeId: ID!\n-}\n-\n-\"\"\"All input for the `deleteForumBySlug` mutation.\"\"\"\n-input DeleteForumBySlugInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"An URL-safe alias for the `Forum`.\"\"\"\n-  slug: String!\n-}\n-\n-\"\"\"All input for the `deleteForum` mutation.\"\"\"\n-input DeleteForumInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-  id: Int!\n-}\n-\n-\"\"\"The output of our delete `Forum` mutation.\"\"\"\n-type DeleteForumPayload {\n-  \"\"\"\n-  The exact same `clientMutationId` that was provided in the mutation input,\n-  unchanged and unused. May be used by a client to track mutations.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `Forum` that was deleted by this mutation.\"\"\"\n-  forum: Forum\n-  deletedForumNodeId: ID\n-\n-  \"\"\"\n-  Our root query field type. Allows us to run any query from our mutation payload.\n-  \"\"\"\n-  query: Query\n-\n-  \"\"\"An edge for our `Forum`. May be used by Relay 1.\"\"\"\n-  forumEdge(\n-    \"\"\"The method to use when ordering `Forum`.\"\"\"\n-    orderBy: [ForumsOrderBy!] = [PRIMARY_KEY_ASC]\n-  ): ForumsEdge\n-}\n-\n \"\"\"All input for the `deletePostByNodeId` mutation.\"\"\"\n input DeletePostByNodeIdInput {\n   \"\"\"\n@@ -465,159 +256,6 @@\n   ): PostsEdge\n }\n \n-\"\"\"All input for the `deleteQuizByNodeId` mutation.\"\"\"\n-input DeleteQuizByNodeIdInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"\n-  The globally unique `ID` which will identify a single `Quiz` to be deleted.\n-  \"\"\"\n-  nodeId: ID!\n-}\n-\n-\"\"\"All input for the `deleteQuizEntryAnswerByNodeId` mutation.\"\"\"\n-input DeleteQuizEntryAnswerByNodeIdInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"\n-  The globally unique `ID` which will identify a single `QuizEntryAnswer` to be deleted.\n-  \"\"\"\n-  nodeId: ID!\n-}\n-\n-\"\"\"All input for the `deleteQuizEntryAnswer` mutation.\"\"\"\n-input DeleteQuizEntryAnswerInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-  id: Int!\n-}\n-\n-\"\"\"The output of our delete `QuizEntryAnswer` mutation.\"\"\"\n-type DeleteQuizEntryAnswerPayload {\n-  \"\"\"\n-  The exact same `clientMutationId` that was provided in the mutation input,\n-  unchanged and unused. May be used by a client to track mutations.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `QuizEntryAnswer` that was deleted by this mutation.\"\"\"\n-  quizEntryAnswer: QuizEntryAnswer\n-  deletedQuizEntryAnswerNodeId: ID\n-\n-  \"\"\"\n-  Our root query field type. Allows us to run any query from our mutation payload.\n-  \"\"\"\n-  query: Query\n-\n-  \"\"\"Reads a single `QuizEntry` that is related to this `QuizEntryAnswer`.\"\"\"\n-  quizEntry: QuizEntry\n-\n-  \"\"\"An edge for our `QuizEntryAnswer`. May be used by Relay 1.\"\"\"\n-  quizEntryAnswerEdge(\n-    \"\"\"The method to use when ordering `QuizEntryAnswer`.\"\"\"\n-    orderBy: [QuizEntryAnswersOrderBy!] = [PRIMARY_KEY_ASC]\n-  ): QuizEntryAnswersEdge\n-}\n-\n-\"\"\"All input for the `deleteQuizEntryByNodeId` mutation.\"\"\"\n-input DeleteQuizEntryByNodeIdInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"\n-  The globally unique `ID` which will identify a single `QuizEntry` to be deleted.\n-  \"\"\"\n-  nodeId: ID!\n-}\n-\n-\"\"\"All input for the `deleteQuizEntry` mutation.\"\"\"\n-input DeleteQuizEntryInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-  id: Int!\n-}\n-\n-\"\"\"The output of our delete `QuizEntry` mutation.\"\"\"\n-type DeleteQuizEntryPayload {\n-  \"\"\"\n-  The exact same `clientMutationId` that was provided in the mutation input,\n-  unchanged and unused. May be used by a client to track mutations.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `QuizEntry` that was deleted by this mutation.\"\"\"\n-  quizEntry: QuizEntry\n-  deletedQuizEntryNodeId: ID\n-\n-  \"\"\"\n-  Our root query field type. Allows us to run any query from our mutation payload.\n-  \"\"\"\n-  query: Query\n-\n-  \"\"\"Reads a single `User` that is related to this `QuizEntry`.\"\"\"\n-  user: User\n-\n-  \"\"\"Reads a single `Quiz` that is related to this `QuizEntry`.\"\"\"\n-  quiz: Quiz\n-\n-  \"\"\"An edge for our `QuizEntry`. May be used by Relay 1.\"\"\"\n-  quizEntryEdge(\n-    \"\"\"The method to use when ordering `QuizEntry`.\"\"\"\n-    orderBy: [QuizEntriesOrderBy!] = [PRIMARY_KEY_ASC]\n-  ): QuizEntriesEdge\n-}\n-\n-\"\"\"All input for the `deleteQuiz` mutation.\"\"\"\n-input DeleteQuizInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-  id: Int!\n-}\n-\n-\"\"\"The output of our delete `Quiz` mutation.\"\"\"\n-type DeleteQuizPayload {\n-  \"\"\"\n-  The exact same `clientMutationId` that was provided in the mutation input,\n-  unchanged and unused. May be used by a client to track mutations.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `Quiz` that was deleted by this mutation.\"\"\"\n-  quiz: Quiz\n-  deletedQuizNodeId: ID\n-\n-  \"\"\"\n-  Our root query field type. Allows us to run any query from our mutation payload.\n-  \"\"\"\n-  query: Query\n-\n-  \"\"\"An edge for our `Quiz`. May be used by Relay 1.\"\"\"\n-  quizEdge(\n-    \"\"\"The method to use when ordering `Quiz`.\"\"\"\n-    orderBy: [QuizzesOrderBy!] = [PRIMARY_KEY_ASC]\n-  ): QuizzesEdge\n-}\n-\n \"\"\"All input for the `deleteTopicByNodeId` mutation.\"\"\"\n input DeleteTopicByNodeIdInput {\n   \"\"\"\n@@ -960,40 +598,6 @@\n   updatedAt: Datetime\n }\n \n-\"\"\"An input for mutations affecting `Forum`\"\"\"\n-input ForumInput {\n-  id: Int\n-\n-  \"\"\"An URL-safe alias for the `Forum`.\"\"\"\n-  slug: String!\n-\n-  \"\"\"The name of the `Forum` (indicates its subject matter).\"\"\"\n-  name: String!\n-\n-  \"\"\"A brief description of the `Forum` including it's purpose.\"\"\"\n-  description: String\n-  createdAt: Datetime\n-  updatedAt: Datetime\n-}\n-\n-\"\"\"\n-Represents an update to a `Forum`. Fields that are set will be updated.\n-\"\"\"\n-input ForumPatch {\n-  id: Int\n-\n-  \"\"\"An URL-safe alias for the `Forum`.\"\"\"\n-  slug: String\n-\n-  \"\"\"The name of the `Forum` (indicates its subject matter).\"\"\"\n-  name: String\n-\n-  \"\"\"A brief description of the `Forum` including it's purpose.\"\"\"\n-  description: String\n-  createdAt: Datetime\n-  updatedAt: Datetime\n-}\n-\n \"\"\"A connection to a list of `Forum` values.\"\"\"\n type ForumsConnection {\n   \"\"\"A list of `Forum` objects.\"\"\"\n@@ -1045,14 +649,6 @@\n The root mutation type which contains root level fields which mutate data.\n \"\"\"\n type Mutation {\n-  \"\"\"Creates a single `Forum`.\"\"\"\n-  createForum(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: CreateForumInput!\n-  ): CreateForumPayload\n-\n   \"\"\"Creates a single `Post`.\"\"\"\n   createPost(\n     \"\"\"\n@@ -1061,30 +657,6 @@\n     input: CreatePostInput!\n   ): CreatePostPayload\n \n-  \"\"\"Creates a single `Quiz`.\"\"\"\n-  createQuiz(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: CreateQuizInput!\n-  ): CreateQuizPayload\n-\n-  \"\"\"Creates a single `QuizEntry`.\"\"\"\n-  createQuizEntry(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: CreateQuizEntryInput!\n-  ): CreateQuizEntryPayload\n-\n-  \"\"\"Creates a single `QuizEntryAnswer`.\"\"\"\n-  createQuizEntryAnswer(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: CreateQuizEntryAnswerInput!\n-  ): CreateQuizEntryAnswerPayload\n-\n   \"\"\"Creates a single `Topic`.\"\"\"\n   createTopic(\n     \"\"\"\n@@ -1117,30 +689,6 @@\n     input: CreateUserInput!\n   ): CreateUserPayload\n \n-  \"\"\"Updates a single `Forum` using its globally unique id and a patch.\"\"\"\n-  updateForumByNodeId(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: UpdateForumByNodeIdInput!\n-  ): UpdateForumPayload\n-\n-  \"\"\"Updates a single `Forum` using a unique key and a patch.\"\"\"\n-  updateForum(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: UpdateForumInput!\n-  ): UpdateForumPayload\n-\n-  \"\"\"Updates a single `Forum` using a unique key and a patch.\"\"\"\n-  updateForumBySlug(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: UpdateForumBySlugInput!\n-  ): UpdateForumPayload\n-\n   \"\"\"Updates a single `Post` using its globally unique id and a patch.\"\"\"\n   updatePostByNodeId(\n     \"\"\"\n@@ -1157,56 +705,6 @@\n     input: UpdatePostInput!\n   ): UpdatePostPayload\n \n-  \"\"\"Updates a single `Quiz` using its globally unique id and a patch.\"\"\"\n-  updateQuizByNodeId(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: UpdateQuizByNodeIdInput!\n-  ): UpdateQuizPayload\n-\n-  \"\"\"Updates a single `Quiz` using a unique key and a patch.\"\"\"\n-  updateQuiz(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: UpdateQuizInput!\n-  ): UpdateQuizPayload\n-\n-  \"\"\"Updates a single `QuizEntry` using its globally unique id and a patch.\"\"\"\n-  updateQuizEntryByNodeId(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: UpdateQuizEntryByNodeIdInput!\n-  ): UpdateQuizEntryPayload\n-\n-  \"\"\"Updates a single `QuizEntry` using a unique key and a patch.\"\"\"\n-  updateQuizEntry(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: UpdateQuizEntryInput!\n-  ): UpdateQuizEntryPayload\n-\n-  \"\"\"\n-  Updates a single `QuizEntryAnswer` using its globally unique id and a patch.\n-  \"\"\"\n-  updateQuizEntryAnswerByNodeId(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: UpdateQuizEntryAnswerByNodeIdInput!\n-  ): UpdateQuizEntryAnswerPayload\n-\n-  \"\"\"Updates a single `QuizEntryAnswer` using a unique key and a patch.\"\"\"\n-  updateQuizEntryAnswer(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: UpdateQuizEntryAnswerInput!\n-  ): UpdateQuizEntryAnswerPayload\n-\n   \"\"\"Updates a single `Topic` using its globally unique id and a patch.\"\"\"\n   updateTopicByNodeId(\n     \"\"\"\n@@ -1297,30 +795,6 @@\n     input: UpdateUserByUsernameInput!\n   ): UpdateUserPayload\n \n-  \"\"\"Deletes a single `Forum` using its globally unique id.\"\"\"\n-  deleteForumByNodeId(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: DeleteForumByNodeIdInput!\n-  ): DeleteForumPayload\n-\n-  \"\"\"Deletes a single `Forum` using a unique key.\"\"\"\n-  deleteForum(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: DeleteForumInput!\n-  ): DeleteForumPayload\n-\n-  \"\"\"Deletes a single `Forum` using a unique key.\"\"\"\n-  deleteForumBySlug(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: DeleteForumBySlugInput!\n-  ): DeleteForumPayload\n-\n   \"\"\"Deletes a single `Post` using its globally unique id.\"\"\"\n   deletePostByNodeId(\n     \"\"\"\n@@ -1337,54 +811,6 @@\n     input: DeletePostInput!\n   ): DeletePostPayload\n \n-  \"\"\"Deletes a single `Quiz` using its globally unique id.\"\"\"\n-  deleteQuizByNodeId(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: DeleteQuizByNodeIdInput!\n-  ): DeleteQuizPayload\n-\n-  \"\"\"Deletes a single `Quiz` using a unique key.\"\"\"\n-  deleteQuiz(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: DeleteQuizInput!\n-  ): DeleteQuizPayload\n-\n-  \"\"\"Deletes a single `QuizEntry` using its globally unique id.\"\"\"\n-  deleteQuizEntryByNodeId(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: DeleteQuizEntryByNodeIdInput!\n-  ): DeleteQuizEntryPayload\n-\n-  \"\"\"Deletes a single `QuizEntry` using a unique key.\"\"\"\n-  deleteQuizEntry(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: DeleteQuizEntryInput!\n-  ): DeleteQuizEntryPayload\n-\n-  \"\"\"Deletes a single `QuizEntryAnswer` using its globally unique id.\"\"\"\n-  deleteQuizEntryAnswerByNodeId(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: DeleteQuizEntryAnswerByNodeIdInput!\n-  ): DeleteQuizEntryAnswerPayload\n-\n-  \"\"\"Deletes a single `QuizEntryAnswer` using a unique key.\"\"\"\n-  deleteQuizEntryAnswer(\n-    \"\"\"\n-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.\n-    \"\"\"\n-    input: DeleteQuizEntryAnswerInput!\n-  ): DeleteQuizEntryAnswerPayload\n-\n   \"\"\"Deletes a single `Topic` using its globally unique id.\"\"\"\n   deleteTopicByNodeId(\n     \"\"\"\n@@ -2032,24 +1458,6 @@\n   answer: Int\n }\n \n-\"\"\"An input for mutations affecting `QuizEntryAnswer`\"\"\"\n-input QuizEntryAnswerInput {\n-  id: Int\n-  quizEntryId: Int!\n-  question: String!\n-  answer: Int\n-}\n-\n-\"\"\"\n-Represents an update to a `QuizEntryAnswer`. Fields that are set will be updated.\n-\"\"\"\n-input QuizEntryAnswerPatch {\n-  id: Int\n-  quizEntryId: Int\n-  question: String\n-  answer: Int\n-}\n-\n \"\"\"A connection to a list of `QuizEntryAnswer` values.\"\"\"\n type QuizEntryAnswersConnection {\n   \"\"\"A list of `QuizEntryAnswer` objects.\"\"\"\n@@ -2108,40 +1516,6 @@\n   quizId: Int\n }\n \n-\"\"\"An input for mutations affecting `QuizEntry`\"\"\"\n-input QuizEntryInput {\n-  id: Int\n-  userId: Int!\n-  quizId: Int!\n-}\n-\n-\"\"\"\n-Represents an update to a `QuizEntry`. Fields that are set will be updated.\n-\"\"\"\n-input QuizEntryPatch {\n-  id: Int\n-  userId: Int\n-  quizId: Int\n-}\n-\n-\"\"\"An input for mutations affecting `Quiz`\"\"\"\n-input QuizInput {\n-  id: Int\n-  name: String!\n-  updatedAt: Datetime\n-  precision12Scale2: BigFloat\n-  precision200Scale100: BigFloat\n-}\n-\n-\"\"\"Represents an update to a `Quiz`. Fields that are set will be updated.\"\"\"\n-input QuizPatch {\n-  id: Int\n-  name: String\n-  updatedAt: Datetime\n-  precision12Scale2: BigFloat\n-  precision200Scale100: BigFloat\n-}\n-\n \"\"\"A connection to a list of `Quiz` values.\"\"\"\n type QuizzesConnection {\n   \"\"\"A list of `Quiz` objects.\"\"\"\n@@ -2378,80 +1752,6 @@\n   PRIMARY_KEY_DESC\n }\n \n-\"\"\"All input for the `updateForumByNodeId` mutation.\"\"\"\n-input UpdateForumByNodeIdInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"\n-  The globally unique `ID` which will identify a single `Forum` to be updated.\n-  \"\"\"\n-  nodeId: ID!\n-\n-  \"\"\"\n-  An object where the defined keys will be set on the `Forum` being updated.\n-  \"\"\"\n-  patch: ForumPatch!\n-}\n-\n-\"\"\"All input for the `updateForumBySlug` mutation.\"\"\"\n-input UpdateForumBySlugInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"\n-  An object where the defined keys will be set on the `Forum` being updated.\n-  \"\"\"\n-  patch: ForumPatch!\n-\n-  \"\"\"An URL-safe alias for the `Forum`.\"\"\"\n-  slug: String!\n-}\n-\n-\"\"\"All input for the `updateForum` mutation.\"\"\"\n-input UpdateForumInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"\n-  An object where the defined keys will be set on the `Forum` being updated.\n-  \"\"\"\n-  patch: ForumPatch!\n-  id: Int!\n-}\n-\n-\"\"\"The output of our update `Forum` mutation.\"\"\"\n-type UpdateForumPayload {\n-  \"\"\"\n-  The exact same `clientMutationId` that was provided in the mutation input,\n-  unchanged and unused. May be used by a client to track mutations.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `Forum` that was updated by this mutation.\"\"\"\n-  forum: Forum\n-\n-  \"\"\"\n-  Our root query field type. Allows us to run any query from our mutation payload.\n-  \"\"\"\n-  query: Query\n-\n-  \"\"\"An edge for our `Forum`. May be used by Relay 1.\"\"\"\n-  forumEdge(\n-    \"\"\"The method to use when ordering `Forum`.\"\"\"\n-    orderBy: [ForumsOrderBy!] = [PRIMARY_KEY_ASC]\n-  ): ForumsEdge\n-}\n-\n \"\"\"All input for the `updatePostByNodeId` mutation.\"\"\"\n input UpdatePostByNodeIdInput {\n   \"\"\"\n@@ -2515,186 +1815,6 @@\n   ): PostsEdge\n }\n \n-\"\"\"All input for the `updateQuizByNodeId` mutation.\"\"\"\n-input UpdateQuizByNodeIdInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"\n-  The globally unique `ID` which will identify a single `Quiz` to be updated.\n-  \"\"\"\n-  nodeId: ID!\n-\n-  \"\"\"\n-  An object where the defined keys will be set on the `Quiz` being updated.\n-  \"\"\"\n-  patch: QuizPatch!\n-}\n-\n-\"\"\"All input for the `updateQuizEntryAnswerByNodeId` mutation.\"\"\"\n-input UpdateQuizEntryAnswerByNodeIdInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"\n-  The globally unique `ID` which will identify a single `QuizEntryAnswer` to be updated.\n-  \"\"\"\n-  nodeId: ID!\n-\n-  \"\"\"\n-  An object where the defined keys will be set on the `QuizEntryAnswer` being updated.\n-  \"\"\"\n-  patch: QuizEntryAnswerPatch!\n-}\n-\n-\"\"\"All input for the `updateQuizEntryAnswer` mutation.\"\"\"\n-input UpdateQuizEntryAnswerInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"\n-  An object where the defined keys will be set on the `QuizEntryAnswer` being updated.\n-  \"\"\"\n-  patch: QuizEntryAnswerPatch!\n-  id: Int!\n-}\n-\n-\"\"\"The output of our update `QuizEntryAnswer` mutation.\"\"\"\n-type UpdateQuizEntryAnswerPayload {\n-  \"\"\"\n-  The exact same `clientMutationId` that was provided in the mutation input,\n-  unchanged and unused. May be used by a client to track mutations.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `QuizEntryAnswer` that was updated by this mutation.\"\"\"\n-  quizEntryAnswer: QuizEntryAnswer\n-\n-  \"\"\"\n-  Our root query field type. Allows us to run any query from our mutation payload.\n-  \"\"\"\n-  query: Query\n-\n-  \"\"\"Reads a single `QuizEntry` that is related to this `QuizEntryAnswer`.\"\"\"\n-  quizEntry: QuizEntry\n-\n-  \"\"\"An edge for our `QuizEntryAnswer`. May be used by Relay 1.\"\"\"\n-  quizEntryAnswerEdge(\n-    \"\"\"The method to use when ordering `QuizEntryAnswer`.\"\"\"\n-    orderBy: [QuizEntryAnswersOrderBy!] = [PRIMARY_KEY_ASC]\n-  ): QuizEntryAnswersEdge\n-}\n-\n-\"\"\"All input for the `updateQuizEntryByNodeId` mutation.\"\"\"\n-input UpdateQuizEntryByNodeIdInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"\n-  The globally unique `ID` which will identify a single `QuizEntry` to be updated.\n-  \"\"\"\n-  nodeId: ID!\n-\n-  \"\"\"\n-  An object where the defined keys will be set on the `QuizEntry` being updated.\n-  \"\"\"\n-  patch: QuizEntryPatch!\n-}\n-\n-\"\"\"All input for the `updateQuizEntry` mutation.\"\"\"\n-input UpdateQuizEntryInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"\n-  An object where the defined keys will be set on the `QuizEntry` being updated.\n-  \"\"\"\n-  patch: QuizEntryPatch!\n-  id: Int!\n-}\n-\n-\"\"\"The output of our update `QuizEntry` mutation.\"\"\"\n-type UpdateQuizEntryPayload {\n-  \"\"\"\n-  The exact same `clientMutationId` that was provided in the mutation input,\n-  unchanged and unused. May be used by a client to track mutations.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `QuizEntry` that was updated by this mutation.\"\"\"\n-  quizEntry: QuizEntry\n-\n-  \"\"\"\n-  Our root query field type. Allows us to run any query from our mutation payload.\n-  \"\"\"\n-  query: Query\n-\n-  \"\"\"Reads a single `User` that is related to this `QuizEntry`.\"\"\"\n-  user: User\n-\n-  \"\"\"Reads a single `Quiz` that is related to this `QuizEntry`.\"\"\"\n-  quiz: Quiz\n-\n-  \"\"\"An edge for our `QuizEntry`. May be used by Relay 1.\"\"\"\n-  quizEntryEdge(\n-    \"\"\"The method to use when ordering `QuizEntry`.\"\"\"\n-    orderBy: [QuizEntriesOrderBy!] = [PRIMARY_KEY_ASC]\n-  ): QuizEntriesEdge\n-}\n-\n-\"\"\"All input for the `updateQuiz` mutation.\"\"\"\n-input UpdateQuizInput {\n-  \"\"\"\n-  An arbitrary string value with no semantic meaning. Will be included in the\n-  payload verbatim. May be used to track mutations by the client.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"\n-  An object where the defined keys will be set on the `Quiz` being updated.\n-  \"\"\"\n-  patch: QuizPatch!\n-  id: Int!\n-}\n-\n-\"\"\"The output of our update `Quiz` mutation.\"\"\"\n-type UpdateQuizPayload {\n-  \"\"\"\n-  The exact same `clientMutationId` that was provided in the mutation input,\n-  unchanged and unused. May be used by a client to track mutations.\n-  \"\"\"\n-  clientMutationId: String\n-\n-  \"\"\"The `Quiz` that was updated by this mutation.\"\"\"\n-  quiz: Quiz\n-\n-  \"\"\"\n-  Our root query field type. Allows us to run any query from our mutation payload.\n-  \"\"\"\n-  query: Query\n-\n-  \"\"\"An edge for our `Quiz`. May be used by Relay 1.\"\"\"\n-  quizEdge(\n-    \"\"\"The method to use when ordering `Quiz`.\"\"\"\n-    orderBy: [QuizzesOrderBy!] = [PRIMARY_KEY_ASC]\n-  ): QuizzesEdge\n-}\n-\n \"\"\"All input for the `updateTopicByNodeId` mutation.\"\"\"\n input UpdateTopicByNodeIdInput {\n   \"\"\"\n","resultLanguage":"diff"},{"title":"SanitizeHTMLTypePlugin","example":"// Author: Benjie Gillam\n// License: https://benjie.mit-license.org/\n//\n// This is a documentation example, you will need to edit it to make it useful.\n// Instructions on running this plugin are at the bottom.\n\n// This function is the one that would perform sanitisation (writing actual\n// sanitisation is left as an exercise to the reader)\nfunction sanitize(html) {\n  return html.toUpperCase();\n}\n\n// Export our plugin function (it can be async if you want)\nmodule.exports = /* async */ function SanitizeHTMLTypePlugin(\n  builder\n) {\n  // Builder is an instance of SchemaBuilder:\n  //\n  //   https://www.graphile.org/graphile-build/schema-builder/\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  // Here we're hooking the init event; this event occurs after the `build`\n  // object is finalised, but before we start building our schema - it's the\n  // perfect time to hook up additional types.\n  //\n  // 'init' is an a-typical hook in that the first argument is meaningless (but\n  // you should still return it at the end of the hook).\n  //\n  // Note all hooks in graphile-build must be synchronous; any async work must be done above here.\n  builder.hook(\"init\", (_, build) => {\n    // The `build` object is an instance of Build: https://www.graphile.org/graphile-build/build-object/\n    // graphile-build-pg adds a bunch of additional helpers to this object:\n    const {\n      pgIntrospectionResultsByKind, // From PgIntrospectionPlugin\n      pgRegisterGqlTypeByTypeId, // From PgTypesPlugin\n      pgRegisterGqlInputTypeByTypeId, // From PgTypesPlugin\n      pg2GqlMapper, // From PgTypesPlugin\n      pgSql: sql, // From PgBasicsPlugin, this is equivalent to `require('pg-sql2')` but avoids multiple-module conflicts\n      graphql, // Equivalent to `require('graphql')` but avoids multiple-module conflicts\n    } = build;\n    const { GraphQLString } = graphql;\n\n    // First we find the type that we care about. In this case we've done\n    //\n    //   CREATE DOMAIN html AS text;\n    // or\n    //   CREATE DOMAIN public.html AS text;\n    //\n    // so we are looking for the 'html' type in the 'public' schema (namespace).\n    const htmlDomain = pgIntrospectionResultsByKind.type.find(\n      type =>\n        type.name === \"html\" &&\n        type.namespaceName ===\n          \"public\"\n    );\n\n    // If this type exists, then...\n    if (htmlDomain) {\n      // Register the *output* type for this type, we just want to use the `String` type\n      pgRegisterGqlTypeByTypeId(\n        htmlDomain.id,\n        () => GraphQLString\n      );\n\n      // Register the *input* type for this type, again we'll use `String`\n      pgRegisterGqlInputTypeByTypeId(\n        htmlDomain.id,\n        () => GraphQLString\n      );\n\n      // The pg2GqlMapper is responsible for translating things from PostgreSQL\n      // into GraphQL and back again.\n      pg2GqlMapper[htmlDomain.id] = {\n        // From Postgres to GraphQL: we simply take the string from postgres\n        // and sanitise it and return the resulting string to GraphQL.\n        map: value => sanitize(value),\n\n        // From GraphQL to SQL: we must construct an SQL fragment that can be\n        // interpolated into larger SQL queries (e.g. as the argument to a\n        // function or the input value for a CREATE/UPDATE mutation). Graphile\n        // uses the pg-sql2 module for this purpose, you can find the docs\n        // here:\n        //\n        //   https://github.com/graphile/pg-sql2/blob/master/README.md\n        //\n        // We're going to take the value (string) the client gave us, stick it\n        // through the sanitise function, then pass it into SQL using\n        // `sql.value` to avoid SQL injection and being sure to cast it to our\n        // HTML type. Note that if you miss the `sql.value(...)` pg-sql2 will\n        // throw an error, so you don't have to worry about accidental SQL\n        // injection - just never use `sql.raw`!\n        unmap: value =>\n          sql.fragment`(${sql.value(\n            sanitize(value)\n          )}::public.html)`,\n      };\n    }\n\n    // All hooks in graphile-build must return something; normally it's an\n    // augmented form of the thing that was passed as the first argument. We\n    // don't manipuate _ at all so we can simply return it.\n    return _;\n  });\n};\n\n/*\n\nYou can test this plugin by saving it to a file 'plugin.js', then executing the\nfollowing:\n\n  # Create a database to test against\n  createdb sanitise-html\n  # Seed the database with our domain, table and some data\n  psql -1X sanitise-html <<SQL\n    CREATE DOMAIN html AS text;\n    CREATE TABLE a (id SERIAL PRIMARY KEY, t TEXT, h HTML);\n    INSERT INTO a (t, h) VALUES ('AaAaAa', 'BbBbBb');\n  SQL\n  # Run PostGraphile\n  postgraphile --append-plugins `pwd`/plugin.js -c postgres:///sanitise-html\n\n\nHere's a GraphQL query for selecting the data:\n\n  {\n    allAs {\n      nodes {\n        id\n        t\n        h\n      }\n    }\n  }\n\nAnd one for updating the data:\n\n  mutation {\n    updateAById(\n      input: {\n        id: 1\n        aPatch: {\n          t: \"tttt_TTTT_tttt\"\n          h: \"hhhh_HHHH_hhhh\"\n        }\n      }\n    ) {\n      a {\n        id\n        t\n        h\n      }\n    }\n  }\n\n*/\n\n// Tested via:\n// npx postgraphile --append-plugins @graphile-contrib/pg-simplify-inflector,`pwd`/examples/plugins/0400_customisation/SanitizeHTMLTypePlugin.js -c graphile_org_demo -s app_public\n","exampleLanguage":"javascript","result":"","resultLanguage":"diff"}]}},{"node":{"category":"plugins","id":"dbd65555-a494-599a-af28-adf3b3b5ae74","title":"Other","examples":[{"title":"ExtractSmartTagsPlugin","example":"/**\n * This plugin will create a file `smartTags.json` containing all of the smart\n * tags gathered from all of the various sources (smart comments, smart tags,\n * plugins, etc etc). This provides a relatively easy migration path from using\n * smart comments to using smart tags instead. Neither Smart Comments nor Smart\n * Tags are \"better\" - they each have trade offs - you can use which ever one\n * matches your teams development flow better (or even mix and match!).\n *\n * Author phryneas (https://github.com/graphile/graphile.github.io/pull/243)\n */\nconst { writeFile } = require(\"fs\");\n\nmodule.exports = builder => {\n  builder.hook(\"init\", (_, build) => {\n    function sortStuff(a, b) {\n      const aSchema =\n        \"namespaceName\" in a\n          ? a.namespaceName\n          : a.class.namespaceName;\n      const bSchema =\n        \"namespaceName\" in b\n          ? b.namespaceName\n          : b.class.namespaceName;\n      return (\n        aSchema.localeCompare(\n          bSchema\n        ) *\n          100 +\n        a.name.localeCompare(b.name)\n      );\n    }\n    const smart = {\n      version: 1,\n      config: {\n        class: [\n          ...build\n            .pgIntrospectionResultsByKind\n            .class,\n        ]\n          .sort(sortStuff)\n          .reduce((acc, pgClass) => {\n            let attribute = [\n              ...pgClass.attributes,\n            ]\n              .sort((a, b) =>\n                a.name.localeCompare(\n                  b.name\n                )\n              )\n              .reduce(\n                (acc, pgAttr) => {\n                  const tags =\n                    Object.keys(\n                      pgAttr.tags\n                    ).length > 0\n                      ? pgAttr.tags\n                      : undefined;\n                  if (\n                    pgAttr.description ||\n                    tags\n                  ) {\n                    acc[\n                      pgAttr.name\n                    ] = {\n                      ...(pgAttr.description\n                        ? {\n                            description:\n                              pgAttr.description,\n                          }\n                        : {}),\n                      tags,\n                    };\n                  }\n                  return acc;\n                },\n                {}\n              );\n            if (\n              Object.keys(attribute)\n                .length === 0\n            ) {\n              attribute = undefined;\n            }\n            let constraint = [\n              ...pgClass.constraints,\n            ]\n              .sort(sortStuff)\n              .reduce(\n                (acc, pgConst) => {\n                  if (\n                    pgConst.name.startsWith(\n                      \"FAKE_\"\n                    )\n                  ) {\n                    return acc;\n                  }\n                  const tags =\n                    Object.keys(\n                      pgConst.tags\n                    ).length > 0\n                      ? pgConst.tags\n                      : undefined;\n                  if (\n                    pgConst.class &&\n                    (pgConst.description ||\n                      tags)\n                  ) {\n                    acc[\n                      pgConst.class\n                        .namespaceName +\n                        \".\" +\n                        pgConst.name\n                    ] = {\n                      ...(pgConst.description\n                        ? {\n                            description:\n                              pgConst.description,\n                          }\n                        : {}),\n                      tags,\n                    };\n                  }\n                  return acc;\n                },\n                {}\n              );\n            if (\n              Object.keys(constraint)\n                .length === 0\n            ) {\n              constraint = undefined;\n            }\n            const tags =\n              Object.keys(\n                pgClass.tags\n              ).length > 0\n                ? pgClass.tags\n                : undefined;\n            if (\n              pgClass.description ||\n              tags ||\n              attribute\n            )\n              acc[\n                pgClass.namespaceName +\n                  \".\" +\n                  pgClass.name\n              ] = {\n                ...(pgClass.description\n                  ? {\n                      description:\n                        pgClass.description,\n                    }\n                  : {}),\n                tags,\n                attribute,\n                constraint,\n              };\n            return acc;\n          }, {}),\n        procedure: [\n          ...build\n            .pgIntrospectionResultsByKind\n            .procedure,\n        ]\n          .sort(sortStuff)\n          .reduce((acc, pgProc) => {\n            if (\n              pgProc.name.startsWith(\n                \"FAKE_\"\n              )\n            ) {\n              return acc;\n            }\n            const tags =\n              Object.keys(pgProc.tags)\n                .length > 0\n                ? pgProc.tags\n                : undefined;\n            if (\n              pgProc.description ||\n              tags\n            ) {\n              acc[\n                pgProc.namespaceName +\n                  \".\" +\n                  pgProc.name\n              ] = {\n                ...(pgProc.description\n                  ? {\n                      description:\n                        pgProc.description,\n                    }\n                  : {}),\n                tags,\n              };\n            }\n            return acc;\n          }, {}),\n      },\n    };\n    writeFile(\n      __dirname + \"/smartTags.json\",\n      JSON.stringify(\n        smart,\n        undefined,\n        2\n      ),\n      e => {\n        console.log(e);\n      }\n    );\n    return _;\n  });\n};\n","exampleLanguage":"javascript","result":"","resultLanguage":"diff"}]}},{"node":{"category":"queries","id":"f906ff51-ad12-5a8c-bdd1-e84635ed21f6","title":"Basic","examples":[{"title":"Forums","example":"{\n  forums {\n    nodes {\n      nodeId\n      id\n      slug\n      name\n      description\n    }\n  }\n}\n","exampleLanguage":"graphql","result":"{\n  \"forums\": {\n    \"nodes\": [\n      {\n        \"nodeId\": \"WyJmb3J1bXMiLDFd\",\n        \"id\": 1,\n        \"slug\": \"testimonials\",\n        \"name\": \"Testimonials\",\n        \"description\": \"How do you rate PostGraphile?\"\n      },\n      {\n        \"nodeId\": \"WyJmb3J1bXMiLDJd\",\n        \"id\": 2,\n        \"slug\": \"feedback\",\n        \"name\": \"Feedback\",\n        \"description\": \"How are you finding PostGraphile?\"\n      },\n      {\n        \"nodeId\": \"WyJmb3J1bXMiLDNd\",\n        \"id\": 3,\n        \"slug\": \"cat-life\",\n        \"name\": \"Cat Life\",\n        \"description\": \"A forum all about cats and how fluffy they are and how they completely ignore their owners unless there is food. Or yarn.\"\n      },\n      {\n        \"nodeId\": \"WyJmb3J1bXMiLDRd\",\n        \"id\": 4,\n        \"slug\": \"cat-help\",\n        \"name\": \"Cat Help\",\n        \"description\": \"A forum to seek advice if your cat is becoming troublesome.\"\n      }\n    ]\n  }\n}\n","resultLanguage":"json"},{"title":"Forum by slug","example":"{\n  forumBySlug(slug: \"testimonials\") {\n    nodeId\n    id\n    slug\n    name\n    description\n  }\n}\n","exampleLanguage":"graphql","result":"{\n  \"forumBySlug\": {\n    \"nodeId\": \"WyJmb3J1bXMiLDFd\",\n    \"id\": 1,\n    \"slug\": \"testimonials\",\n    \"name\": \"Testimonials\",\n    \"description\": \"How do you rate PostGraphile?\"\n  }\n}\n","resultLanguage":"json"}]}},{"node":{"category":"queries","id":"b888ab68-4d0f-5abb-ab79-4878be4ab4af","title":"Collections","examples":[{"title":"First offset","example":"{\n  forums(first: 1, offset: 1) {\n    nodes {\n      nodeId\n      id\n      name\n    }\n  }\n}\n","exampleLanguage":"graphql","result":"{\n  \"forums\": {\n    \"nodes\": [\n      {\n        \"nodeId\": \"WyJmb3J1bXMiLDJd\",\n        \"id\": 2,\n        \"name\": \"Feedback\"\n      }\n    ]\n  }\n}\n","resultLanguage":"json"},{"title":"Relation condition","example":"{\n  forumBySlug(slug: \"testimonials\") {\n    nodeId\n    id\n    name\n    topics(\n      condition: { authorId: 2 }\n    ) {\n      nodes {\n        nodeId\n        id\n        title\n        body\n      }\n    }\n  }\n}\n","exampleLanguage":"graphql","result":"{\n  \"forumBySlug\": {\n    \"nodeId\": \"WyJmb3J1bXMiLDFd\",\n    \"id\": 1,\n    \"name\": \"Testimonials\",\n    \"topics\": {\n      \"nodes\": [\n        {\n          \"nodeId\": \"WyJ0b3BpY3MiLDFd\",\n          \"id\": 1,\n          \"title\": \"Thank you!\",\n          \"body\": \"500-1500 requests per second on a single server is pretty awesome.\"\n        }\n      ]\n    }\n  }\n}\n","resultLanguage":"json"}]}},{"node":{"category":"queries","id":"27f4c024-b66b-572b-b78f-544e1b6d7b53","title":"Relations","examples":[{"title":"Forums topics posts","example":"{\n  forumBySlug(slug: \"cat-life\") {\n    name\n    topics(\n      first: 1\n      orderBy: [CREATED_AT_ASC]\n    ) {\n      nodes {\n        id\n        title\n        bodySummary\n        author {\n          id\n          username\n        }\n        posts(\n          first: 1\n          orderBy: [ID_DESC]\n        ) {\n          nodes {\n            id\n            author {\n              id\n              username\n            }\n            body\n          }\n        }\n      }\n    }\n  }\n}\n","exampleLanguage":"graphql","result":"{\n  \"forumBySlug\": {\n    \"name\": \"Cat Life\",\n    \"topics\": {\n      \"nodes\": [\n        {\n          \"id\": 4,\n          \"title\": \"I love cats!\",\n          \"bodySummary\": \"They're the best!\",\n          \"author\": {\n            \"id\": 1,\n            \"username\": \"user\"\n          },\n          \"posts\": {\n            \"nodes\": [\n              {\n                \"id\": 6,\n                \"author\": {\n                  \"id\": 3,\n                  \"username\": \"Bradley_A\"\n                },\n                \"body\": \"I love it when they completely ignore you until they want something. So much better than dogs am I rite?\"\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n}\n","resultLanguage":"json"}]}},{"node":{"category":"queries","id":"bdec1796-5c46-5148-b9c8-7c5bd9e0a9bc","title":"Mutations","examples":[{"title":"Create","example":"mutation {\n  createTopic(\n    input: {\n      topic: {\n        forumId: 2\n        title: \"My question relates to mutations...\"\n        body: \"How do you write them?\"\n      }\n    }\n  ) {\n    topic {\n      nodeId\n      id\n      forumId\n      title\n      body\n    }\n  }\n}\n","exampleLanguage":"graphql","result":"{\n  \"createTopic\": {\n    \"topic\": {\n      \"nodeId\": \"WyJ0b3BpY3MiLDVd\",\n      \"id\": 5,\n      \"forumId\": 2,\n      \"title\": \"My question relates to mutations...\",\n      \"body\": \"How do you write them?\"\n    }\n  }\n}\n","resultLanguage":"json"},{"title":"Update","example":"mutation {\n  updateTopic(\n    input: {\n      id: 1\n      patch: {\n        title: \"My (edited) title\"\n      }\n    }\n  ) {\n    topic {\n      nodeId\n      id\n      title\n      body\n    }\n  }\n}\n\n# Works for a table like:\n#\n#   create table app_public.topics (\n#     id serial primary key,\n#     forum_id integer NOT NULL references app_public.forums on delete cascade,\n#     title text NOT NULL,\n#     body text DEFAULT ''::text NOT NULL\n#   );\n","exampleLanguage":"graphql","result":"{\n  \"updateTopic\": {\n    \"topic\": {\n      \"nodeId\": \"WyJ0b3BpY3MiLDFd\",\n      \"id\": 1,\n      \"title\": \"My (edited) title\",\n      \"body\": \"500-1500 requests per second on a single server is pretty awesome.\"\n    }\n  }\n}\n","resultLanguage":"json"},{"title":"Delete","example":"mutation {\n  deleteTopic(input: { id: 1 }) {\n    deletedTopicNodeId\n  }\n}\n","exampleLanguage":"graphql","result":"{\n  \"deleteTopic\": {\n    \"deletedTopicNodeId\": \"WyJ0b3BpY3MiLDFd\"\n  }\n}\n","resultLanguage":"json"}]}},{"node":{"category":"queries","id":"9f525338-c706-502c-8579-283ead2583e1","title":"Custom queries","examples":[{"title":"Single scalar","example":"{\n  randomNumber\n}\n\n# Generated by SQL like:\n#\n#  create function app_public.random_number() returns int\n#  language sql stable\n#  as $$\n#    select 4; -- Chosen by fair dice roll. Guaranteed to be random. XKCD#221\n#  $$;\n#\n","exampleLanguage":"graphql","result":"{ \"randomNumber\": 4 }\n","resultLanguage":"json"},{"title":"Single row","example":"{\n  currentUser {\n    nodeId\n    id\n    username\n  }\n}\n\n# Added to the GraphQL schema via\n# this SQL:\n#\n#   create function current_user()\n#   returns app_public.users\n#   language sql stable\n#   as $$\n#     select users.*\n#     from app_public.users\n#     where id = current_user_id();\n#   $$;\n","exampleLanguage":"graphql","result":"{\n  \"currentUser\": {\n    \"nodeId\": \"WyJ1c2VycyIsMV0=\",\n    \"id\": 1,\n    \"username\": \"user\"\n  }\n}\n","resultLanguage":"json"},{"title":"Rows connection","example":"{\n  forumsAboutCats {\n    nodes {\n      nodeId\n      id\n      name\n      slug\n    }\n  }\n}\n\n# Created from SQL like:\n#\n#  create function app_public.forums_about_cats()\n#  returns setof app_public.forums\n#  language sql stable\n#  as $$\n#    select *\n#    from app_public.forums\n#    where slug like 'cat-%';\n#  $$;\n","exampleLanguage":"graphql","result":"{\n  \"forumsAboutCats\": {\n    \"nodes\": [\n      {\n        \"nodeId\": \"WyJmb3J1bXMiLDNd\",\n        \"id\": 3,\n        \"name\": \"Cat Life\",\n        \"slug\": \"cat-life\"\n      },\n      {\n        \"nodeId\": \"WyJmb3J1bXMiLDRd\",\n        \"id\": 4,\n        \"name\": \"Cat Help\",\n        \"slug\": \"cat-help\"\n      }\n    ]\n  }\n}\n","resultLanguage":"json"}]}},{"node":{"category":"queries","id":"930fee5d-1349-51dd-b08e-4860ade62c30","title":"Custom mutations","examples":[{"title":"Forgot password","example":"mutation {\n  forgotPassword(\n    input: {\n      email: \"benjie@example.com\"\n    }\n  ) {\n    success\n  }\n}\n\n# Generated with SQL like this:\n#\n#  create function forgot_password(email text)\n#  returns boolean\n#  language plpgsql volatile\n#  as $$\n#    ...\n#  $$;\n#\n#  -- Optionally rename the result field:\n#  comment on function\n#    forgot_password(email text)\n#    is '@resultFieldName success';\n","exampleLanguage":"graphql","result":"{\n  \"forgotPassword\": {\n    \"success\": true\n  }\n}\n","resultLanguage":"json"}]}},{"node":{"category":"queries","id":"94982c6f-daf0-57dd-b38b-8002654b07bc","title":"Computed columns","examples":[{"title":"Topic summary","example":"{\n  topic(id: 2) {\n    body\n    bodySummary\n  }\n}\n\n# Generated by SQL like:\n#\n#  create function app_public.topics_body_summary(\n#    t app_public.topics,\n#    max_length int = 30\n#  )\n#  returns text\n#  language sql stable\n#  as $$\n#    select case\n#      when length(t.body) > max_length\n#      then left(t.body, max_length - 3)\n#             || '...'\n#      else t.body\n#      end;\n#  $$;\n","exampleLanguage":"graphql","result":"{\n  \"topic\": {\n    \"body\": \"PostGraphile is a powerful, idomatic, and elegant tool.\",\n    \"bodySummary\": \"PostGraphile is a powerful,...\"\n  }\n}\n","resultLanguage":"json"},{"title":"Topic summary with arg","example":"{\n  topic(id: 2) {\n    body\n    bodySummary(maxLength: 20)\n  }\n}\n\n# Generated by SQL like:\n#\n#  create function app_public.topics_body_summary(\n#    t app_public.topics,\n#    max_length int = 30\n#  )\n#  returns text\n#  language sql stable\n#  as $$\n#    select case\n#      when length(t.body) > max_length\n#      then left(t.body, max_length - 3)\n#             || '...'\n#      else t.body\n#      end;\n#  $$;\n","exampleLanguage":"graphql","result":"{\n  \"topic\": {\n    \"body\": \"PostGraphile is a powerful, idomatic, and elegant tool.\",\n    \"bodySummary\": \"PostGraphile is a...\"\n  }\n}\n","resultLanguage":"json"}]}}]}},"pageContext":{"slug":"/postgraphile/running-postgraphile-in-docker/","layout":"page"}}}